{"version":3,"sources":["skylark-widgets-colorpicker-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","proxy","context","TypeError","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","Promise","always","handler","done","fail","catch","self","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","state","notified","listeners","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","listener","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Emitter","on","events","selector","one","_hub","parsed","emit","CustomEvent","eventName","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","toArray","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","delegateMethodNames","colors","trimLeft","trimRight","math","mathRound","round","mathMin","min","mathMax","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexNames","o","flipped","flip","rgbToRgb","g","bound01","hslToRgb","h","s","hue2rgb","q","t","boundAlpha","isOnePointZero","processPercent","isPercentage","abs","parseIntFromHex","pad2","convertToPercentage","convertHexToDecimal","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","matchers","rgb","rgba","hsl","hsla","hsv","hsva","hex3","hex6","hex8","stringInputToObject","color","named","inputToRGB","ok","substr","floor","f","mod","hsvToRgb","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","rgbaToHex","clamp01","tinyCounter","mathRandom","Color","opts","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","toRgb","setAlpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","needsAlphaFormat","_applyModification","lighten","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","amount","hue","slices","modification","fromRatio","newColor","equals","color1","color2","mix","w1","rgb1","rgb2","w2","readability","c1","c2","brightnessA","brightnessB","colorDiff","brightness","isReadable","mostReadable","baseColor","colorList","bestColor","bestScore","bestIsReadable","readable","score","files","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","top","onchange","webkitEntries","webkitdirectory","picker","cachedScrollbarWidth","px","scrollbarWidth","innerDiv","clientWidth","borderExtents","bottom","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","collections","Collection","_clear","it","iterator","hasNext","thisArg","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","Widget","_elmx","_parse","_velm","_create","_init","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","eval","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","category","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","defaultOpts","beforeShow","move","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","pickers","replaceInput","markup","gradientFix","paletteTemplate","tiny","swatchStyle","ColorPicker","callbackContext","callbacks","instanceOptions","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","draggingClass","shiftMovementDirection","boundElement","pickerContainer","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","colorOnShow","currentPreferredFormat","applyOptions","updateSelectionPaletteFromStorage","localStorage","oldPalette","addColorToSelectionPalette","drawPalette","currentColor","unique","getUniqueSelectionPalette","drawInitial","initial","dragStart","dragStop","setFromTextInput","updateOriginalInput","hideAll","onkeydown","clickout","updateUI","revert","ignoreFormatChange","newHsv","updateHelperLocations","flatColor","realColor","displayColor","realHex","realRgb","realAlpha","gradient","dragX","dragY","alphaX","slideY","fireCallback","dpWidth","dpHeight","inputHeight","docElem","viewWidth","viewHeight","draggable","oldDragX","oldDragY","furtherFromX","setValue","paletteElementClick","ignore","paletteEvent","initialize","spect","optionName","optionValue","coord","dataID","loadOpts","localization","palettes","colorPicker","extra"],"mappings":"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","file":"../skylark-widgets-colorpicker-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-data-color/colors',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n],function(skylark,langx) {\r\n    /*\r\n     * This module uses the following open source code:\r\n     *   TinyColor v1.1.2\r\n     *     https://github.com/bgrins/TinyColor\r\n     *     Brian Grinstead, MIT License\r\n     */\r\n\r\n    var colors = skylark.colors =  skylark.colors || {};\r\n\r\n    var trimLeft = /^[\\s,#]+/,\r\n        trimRight = /\\s+$/,\r\n        math = Math,\r\n        mathRound = math.round,\r\n        mathMin = math.min,\r\n        mathMax = math.max,\r\n        mathRandom = math.random;\r\n\r\n\r\n     // Big List of Colors\r\n    // ------------------\r\n    // <http://www.w3.org/TR/css3-color/#svg-color>\r\n    var names = colors.names = {\r\n        aliceblue: \"f0f8ff\",\r\n        antiquewhite: \"faebd7\",\r\n        aqua: \"0ff\",\r\n        aquamarine: \"7fffd4\",\r\n        azure: \"f0ffff\",\r\n        beige: \"f5f5dc\",\r\n        bisque: \"ffe4c4\",\r\n        black: \"000\",\r\n        blanchedalmond: \"ffebcd\",\r\n        blue: \"00f\",\r\n        blueviolet: \"8a2be2\",\r\n        brown: \"a52a2a\",\r\n        burlywood: \"deb887\",\r\n        burntsienna: \"ea7e5d\",\r\n        cadetblue: \"5f9ea0\",\r\n        chartreuse: \"7fff00\",\r\n        chocolate: \"d2691e\",\r\n        coral: \"ff7f50\",\r\n        cornflowerblue: \"6495ed\",\r\n        cornsilk: \"fff8dc\",\r\n        crimson: \"dc143c\",\r\n        cyan: \"0ff\",\r\n        darkblue: \"00008b\",\r\n        darkcyan: \"008b8b\",\r\n        darkgoldenrod: \"b8860b\",\r\n        darkgray: \"a9a9a9\",\r\n        darkgreen: \"006400\",\r\n        darkgrey: \"a9a9a9\",\r\n        darkkhaki: \"bdb76b\",\r\n        darkmagenta: \"8b008b\",\r\n        darkolivegreen: \"556b2f\",\r\n        darkorange: \"ff8c00\",\r\n        darkorchid: \"9932cc\",\r\n        darkred: \"8b0000\",\r\n        darksalmon: \"e9967a\",\r\n        darkseagreen: \"8fbc8f\",\r\n        darkslateblue: \"483d8b\",\r\n        darkslategray: \"2f4f4f\",\r\n        darkslategrey: \"2f4f4f\",\r\n        darkturquoise: \"00ced1\",\r\n        darkviolet: \"9400d3\",\r\n        deeppink: \"ff1493\",\r\n        deepskyblue: \"00bfff\",\r\n        dimgray: \"696969\",\r\n        dimgrey: \"696969\",\r\n        dodgerblue: \"1e90ff\",\r\n        firebrick: \"b22222\",\r\n        floralwhite: \"fffaf0\",\r\n        forestgreen: \"228b22\",\r\n        fuchsia: \"f0f\",\r\n        gainsboro: \"dcdcdc\",\r\n        ghostwhite: \"f8f8ff\",\r\n        gold: \"ffd700\",\r\n        goldenrod: \"daa520\",\r\n        gray: \"808080\",\r\n        green: \"008000\",\r\n        greenyellow: \"adff2f\",\r\n        grey: \"808080\",\r\n        honeydew: \"f0fff0\",\r\n        hotpink: \"ff69b4\",\r\n        indianred: \"cd5c5c\",\r\n        indigo: \"4b0082\",\r\n        ivory: \"fffff0\",\r\n        khaki: \"f0e68c\",\r\n        lavender: \"e6e6fa\",\r\n        lavenderblush: \"fff0f5\",\r\n        lawngreen: \"7cfc00\",\r\n        lemonchiffon: \"fffacd\",\r\n        lightblue: \"add8e6\",\r\n        lightcoral: \"f08080\",\r\n        lightcyan: \"e0ffff\",\r\n        lightgoldenrodyellow: \"fafad2\",\r\n        lightgray: \"d3d3d3\",\r\n        lightgreen: \"90ee90\",\r\n        lightgrey: \"d3d3d3\",\r\n        lightpink: \"ffb6c1\",\r\n        lightsalmon: \"ffa07a\",\r\n        lightseagreen: \"20b2aa\",\r\n        lightskyblue: \"87cefa\",\r\n        lightslategray: \"789\",\r\n        lightslategrey: \"789\",\r\n        lightsteelblue: \"b0c4de\",\r\n        lightyellow: \"ffffe0\",\r\n        lime: \"0f0\",\r\n        limegreen: \"32cd32\",\r\n        linen: \"faf0e6\",\r\n        magenta: \"f0f\",\r\n        maroon: \"800000\",\r\n        mediumaquamarine: \"66cdaa\",\r\n        mediumblue: \"0000cd\",\r\n        mediumorchid: \"ba55d3\",\r\n        mediumpurple: \"9370db\",\r\n        mediumseagreen: \"3cb371\",\r\n        mediumslateblue: \"7b68ee\",\r\n        mediumspringgreen: \"00fa9a\",\r\n        mediumturquoise: \"48d1cc\",\r\n        mediumvioletred: \"c71585\",\r\n        midnightblue: \"191970\",\r\n        mintcream: \"f5fffa\",\r\n        mistyrose: \"ffe4e1\",\r\n        moccasin: \"ffe4b5\",\r\n        navajowhite: \"ffdead\",\r\n        navy: \"000080\",\r\n        oldlace: \"fdf5e6\",\r\n        olive: \"808000\",\r\n        olivedrab: \"6b8e23\",\r\n        orange: \"ffa500\",\r\n        orangered: \"ff4500\",\r\n        orchid: \"da70d6\",\r\n        palegoldenrod: \"eee8aa\",\r\n        palegreen: \"98fb98\",\r\n        paleturquoise: \"afeeee\",\r\n        palevioletred: \"db7093\",\r\n        papayawhip: \"ffefd5\",\r\n        peachpuff: \"ffdab9\",\r\n        peru: \"cd853f\",\r\n        pink: \"ffc0cb\",\r\n        plum: \"dda0dd\",\r\n        powderblue: \"b0e0e6\",\r\n        purple: \"800080\",\r\n        rebeccapurple: \"663399\",\r\n        red: \"f00\",\r\n        rosybrown: \"bc8f8f\",\r\n        royalblue: \"4169e1\",\r\n        saddlebrown: \"8b4513\",\r\n        salmon: \"fa8072\",\r\n        sandybrown: \"f4a460\",\r\n        seagreen: \"2e8b57\",\r\n        seashell: \"fff5ee\",\r\n        sienna: \"a0522d\",\r\n        silver: \"c0c0c0\",\r\n        skyblue: \"87ceeb\",\r\n        slateblue: \"6a5acd\",\r\n        slategray: \"708090\",\r\n        slategrey: \"708090\",\r\n        snow: \"fffafa\",\r\n        springgreen: \"00ff7f\",\r\n        steelblue: \"4682b4\",\r\n        tan: \"d2b48c\",\r\n        teal: \"008080\",\r\n        thistle: \"d8bfd8\",\r\n        tomato: \"ff6347\",\r\n        turquoise: \"40e0d0\",\r\n        violet: \"ee82ee\",\r\n        wheat: \"f5deb3\",\r\n        white: \"fff\",\r\n        whitesmoke: \"f5f5f5\",\r\n        yellow: \"ff0\",\r\n        yellowgreen: \"9acd32\"\r\n    };\r\n\r\n    // Make it easy to access colors via `hexNames[hex]`\r\n    var hexNames = colors.hexNames = flip(names);\r\n\r\n\r\n    // Utilities\r\n    // ---------\r\n\r\n    // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\n    function flip(o) {\r\n        var flipped = { };\r\n        for (var i in o) {\r\n            if (o.hasOwnProperty(i)) {\r\n                flipped[o[i]] = i;\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n       \r\n\r\n\r\n    // Given a string or object, convert that input to RGB\r\n    // Possible string inputs:\r\n    //\r\n    //     \"red\"\r\n    //     \"#f00\" or \"f00\"\r\n    //     \"#ff0000\" or \"ff0000\"\r\n    //     \"#ff000000\" or \"ff000000\"\r\n    //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n    //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n    //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n    //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n    //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n    //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n    //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n    //\r\n    function inputToRGB(color) {\r\n\r\n        var rgb = { r: 0, g: 0, b: 0 };\r\n        var a = 1;\r\n        var ok = false;\r\n        var format = false;\r\n\r\n        if (typeof color == \"string\") {\r\n            color = stringInputToObject(color);\r\n        }\r\n\r\n        if (typeof color == \"object\") {\r\n            if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\r\n                rgb = rgbToRgb(color.r, color.g, color.b);\r\n                ok = true;\r\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.v = convertToPercentage(color.v);\r\n                rgb = hsvToRgb(color.h, color.s, color.v);\r\n                ok = true;\r\n                format = \"hsv\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.l = convertToPercentage(color.l);\r\n                rgb = hslToRgb(color.h, color.s, color.l);\r\n                ok = true;\r\n                format = \"hsl\";\r\n            }\r\n\r\n            if (color.hasOwnProperty(\"a\")) {\r\n                a = color.a;\r\n            }\r\n        }\r\n\r\n        a = boundAlpha(a);\r\n\r\n        return {\r\n            ok: ok,\r\n            format: color.format || format,\r\n            r: mathMin(255, mathMax(rgb.r, 0)),\r\n            g: mathMin(255, mathMax(rgb.g, 0)),\r\n            b: mathMin(255, mathMax(rgb.b, 0)),\r\n            a: a\r\n        };\r\n    }\r\n\r\n\r\n    // Conversion Functions\r\n    // --------------------\r\n\r\n    // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n    // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n\r\n    // `rgbToRgb`\r\n    // Handle bounds / percentage checking to conform to CSS color spec\r\n    // <http://www.w3.org/TR/css3-color/>\r\n    // *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n    // *Returns:* { r, g, b } in [0, 255]\r\n    function rgbToRgb(r, g, b){\r\n        return {\r\n            r: bound01(r, 255) * 255,\r\n            g: bound01(g, 255) * 255,\r\n            b: bound01(b, 255) * 255\r\n        };\r\n    }\r\n\r\n    // `rgbToHsl`\r\n    // Converts an RGB color value to HSL.\r\n    // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, l } in [0,1]\r\n    function rgbToHsl(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min) {\r\n            h = s = 0; // achromatic\r\n        }\r\n        else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n\r\n            h /= 6;\r\n        }\r\n\r\n        return { h: h, s: s, l: l };\r\n    }\r\n\r\n    // `hslToRgb`\r\n    // Converts an HSL color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n    function hslToRgb(h, s, l) {\r\n        var r, g, b;\r\n\r\n        h = bound01(h, 360);\r\n        s = bound01(s, 100);\r\n        l = bound01(l, 100);\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        if(s === 0) {\r\n            r = g = b = l; // achromatic\r\n        }\r\n        else {\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHsv`\r\n    // Converts an RGB color value to HSV\r\n    // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, v } in [0,1]\r\n    function rgbToHsv(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, v = max;\r\n\r\n        var d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if(max == min) {\r\n            h = 0; // achromatic\r\n        }\r\n        else {\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h, s: s, v: v };\r\n    }\r\n\r\n    // `hsvToRgb`\r\n    // Converts an HSV color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n     function hsvToRgb(h, s, v) {\r\n\r\n        h = bound01(h, 360) * 6;\r\n        s = bound01(s, 100);\r\n        v = bound01(v, 100);\r\n\r\n        var i = math.floor(h),\r\n            f = h - i,\r\n            p = v * (1 - s),\r\n            q = v * (1 - f * s),\r\n            t = v * (1 - (1 - f) * s),\r\n            mod = i % 6,\r\n            r = [v, q, p, p, t, v][mod],\r\n            g = [t, v, v, q, p, p][mod],\r\n            b = [p, p, t, v, v, q][mod];\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHex`\r\n    // Converts an RGB color to hex\r\n    // Assumes r, g, and b are contained in the set [0, 255]\r\n    // Returns a 3 or 6 character hex\r\n    function rgbToHex(r, g, b, allow3Char) {\r\n\r\n        var hex = [\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        // Return a 3 character hex if possible\r\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n        }\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n    // `rgbaToHex`\r\n    // Converts an RGBA color plus alpha transparency to hex\r\n    // Assumes r, g, b and a are contained in the set [0, 255]\r\n    // Returns an 8 character hex\r\n    function rgbaToHex(r, g, b, a) {\r\n\r\n        var hex = [\r\n            pad2(convertDecimalToHex(a)),\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n\r\n\r\n    // Return a valid alpha value [0,1] with all invalid values being set to 1\r\n    function boundAlpha(a) {\r\n        a = parseFloat(a);\r\n\r\n        if (isNaN(a) || a < 0 || a > 1) {\r\n            a = 1;\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n    // Take input from [0, n] and return it as [0, 1]\r\n    function bound01(n, max) {\r\n        if (isOnePointZero(n)) { n = \"100%\"; }\r\n\r\n        var processPercent = isPercentage(n);\r\n        n = mathMin(max, mathMax(0, parseFloat(n)));\r\n\r\n        // Automatically convert percentage into number\r\n        if (processPercent) {\r\n            n = parseInt(n * max, 10) / 100;\r\n        }\r\n\r\n        // Handle floating point rounding errors\r\n        if ((math.abs(n - max) < 0.000001)) {\r\n            return 1;\r\n        }\r\n\r\n        // Convert into [0, 1] range if it isn't already\r\n        return (n % max) / parseFloat(max);\r\n    }\r\n\r\n    // Force a number between 0 and 1\r\n    function clamp01(val) {\r\n        return mathMin(1, mathMax(0, val));\r\n    }\r\n\r\n    // Parse a base-16 hex value into a base-10 integer\r\n    function parseIntFromHex(val) {\r\n        return parseInt(val, 16);\r\n    }\r\n\r\n    // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n    // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n    function isOnePointZero(n) {\r\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n    }\r\n\r\n    // Check to see if string passed in is a percentage\r\n    function isPercentage(n) {\r\n        return typeof n === \"string\" && n.indexOf('%') != -1;\r\n    }\r\n\r\n    // Force a hex value to have 2 characters\r\n    function pad2(c) {\r\n        return c.length == 1 ? '0' + c : '' + c;\r\n    }\r\n\r\n    // Replace a decimal with it's percentage value\r\n    function convertToPercentage(n) {\r\n        if (n <= 1) {\r\n            n = (n * 100) + \"%\";\r\n        }\r\n\r\n        return n;\r\n    }\r\n\r\n    // Converts a decimal to a hex value\r\n    function convertDecimalToHex(d) {\r\n        return Math.round(parseFloat(d) * 255).toString(16);\r\n    }\r\n    // Converts a hex value to a decimal\r\n    function convertHexToDecimal(h) {\r\n        return (parseIntFromHex(h) / 255);\r\n    }\r\n\r\n    var matchers = (function() {\r\n\r\n        // <http://www.w3.org/TR/css3-values/#integers>\r\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n\r\n        // <http://www.w3.org/TR/css3-values/#number-value>\r\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n\r\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n\r\n        // Actual matching.\r\n        // Parentheses and commas are optional, but not required.\r\n        // Whitespace can take the place of commas or opening paren\r\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n\r\n        return {\r\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n            hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n            hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n            hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n        };\r\n    })();\r\n\r\n    // `stringInputToObject`\r\n    // Permissive string parsing.  Take in a number of formats, and output an object\r\n    // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n    function stringInputToObject(color) {\r\n\r\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n        var named = false;\r\n        if (names[color]) {\r\n            color = names[color];\r\n            named = true;\r\n        }\r\n        else if (color == 'transparent') {\r\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n        }\r\n\r\n        // Try to match string input using regular expressions.\r\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n        // Just return an object and let the conversion functions handle that.\r\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n        var match;\r\n        if ((match = matchers.rgb.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3] };\r\n        }\r\n        if ((match = matchers.rgba.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsl.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3] };\r\n        }\r\n        if ((match = matchers.hsla.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsv.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3] };\r\n        }\r\n        if ((match = matchers.hsva.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hex8.exec(color))) {\r\n            return {\r\n                a: convertHexToDecimal(match[1]),\r\n                r: parseIntFromHex(match[2]),\r\n                g: parseIntFromHex(match[3]),\r\n                b: parseIntFromHex(match[4]),\r\n                format: named ? \"name\" : \"hex8\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex6.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1]),\r\n                g: parseIntFromHex(match[2]),\r\n                b: parseIntFromHex(match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex3.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1] + '' + match[1]),\r\n                g: parseIntFromHex(match[2] + '' + match[2]),\r\n                b: parseIntFromHex(match[3] + '' + match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    langx.mixin(colors,{\r\n        inputToRGB : inputToRGB,\r\n        rgbToRgb : rgbToRgb,\r\n        rgbToHsl : rgbToHsl,\r\n        hslToRgb : hslToRgb,\r\n        rgbToHsv : rgbToHsv,\r\n        rgbToHex : rgbToHex,\r\n        rgbaToHex : rgbaToHex,\r\n        boundAlpha : boundAlpha,\r\n        bound01 : bound01,\r\n        clamp01 : clamp01,\r\n        parseIntFromHex : parseIntFromHex,\r\n        isOnePointZero : isOnePointZero,\r\n        isPercentage : isPercentage,\r\n        pad2 : pad2,\r\n        convertToPercentage : convertToPercentage,\r\n        convertHexToDecimal : convertHexToDecimal,\r\n        stringInputToObject : stringInputToObject\r\n\r\n    });\r\n\r\n    return skylark.attach(\"data.colors\",colors);\r\n\r\n});\r\n\ndefine('skylark-data-color/Color',[\r\n    \"skylark-langx/langx\",\r\n    \"./colors\"\r\n],function(langx,colors) {\r\n    /*\r\n     * This module uses the following open source code:\r\n     *   TinyColor v1.1.2\r\n     *     https://github.com/bgrins/TinyColor\r\n     *     Brian Grinstead, MIT License\r\n     */\r\n\r\n    var inputToRGB = colors.inputToRGB,\r\n        rgbToRgb = colors.rgbToRgb,\r\n        rgbToHsl = colors.rgbToHsl,\r\n        hslToRgb = colors.hslToRgb,\r\n        rgbToHsv = colors.rgbToHsv,\r\n        rgbToHex = colors.rgbToHex,\r\n        rgbaToHex = colors.rgbaToHex,\r\n        boundAlpha = colors.boundAlpha,\r\n        bound01 = colors.bound01,\r\n        clamp01 = colors.clamp01,\r\n        parseIntFromHex = colors.parseIntFromHex,\r\n        isOnePointZero = colors.isOnePointZero,\r\n        isPercentage = colors.isPercentage,\r\n        pad2 = colors.pad2,\r\n        convertToPercentage = colors.convertToPercentage,\r\n        convertHexToDecimal = colors.convertHexToDecimal,\r\n        stringInputToObject = colors.stringInputToObject,\r\n        hexNames = colors.hexNames;\r\n\r\n    var tinyCounter = 0,\r\n        math = Math,\r\n        mathRound = math.round,\r\n        mathMin = math.min,\r\n        mathMax = math.max,\r\n        mathRandom = math.random;\r\n\r\n\tvar Color = colors.Color = langx.klass({\r\n\t\tinit : function(color, opts) {\r\n\t        color = (color) ? color : '';\r\n    \t    opts = opts || { };\r\n\r\n\t        // If input is already a Color, return itself\r\n\t        if (color instanceof Color) {\r\n\t           return color;\r\n\t        }\r\n\r\n\t        var rgb = inputToRGB(color);\r\n\t        this._originalInput = color,\r\n\t        this._r = rgb.r,\r\n\t        this._g = rgb.g,\r\n\t        this._b = rgb.b,\r\n\t        this._a = rgb.a,\r\n\t        this._roundA = mathRound(1000 * this._a) / 1000,\r\n\t        this._format = opts.format || rgb.format;\r\n\t        this._gradientType = opts.gradientType;\r\n\r\n\t        // Don't let the range of [0,255] come back in [0,1].\r\n\t        // Potentially lose a little bit of precision here, but will fix issues where\r\n\t        // .5 gets interpreted as half of the total, instead of half of 1\r\n\t        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n\t        if (this._r < 1) { this._r = mathRound(this._r); }\r\n\t        if (this._g < 1) { this._g = mathRound(this._g); }\r\n\t        if (this._b < 1) { this._b = mathRound(this._b); }\r\n\r\n\t        this._ok = rgb.ok;\r\n\t        this._tc_id = tinyCounter++;\r\n\t    },\r\n\r\n        isDark: function() {\r\n            return this.getBrightness() < 128;\r\n        },\r\n        isLight: function() {\r\n            return !this.isDark();\r\n        },\r\n        isValid: function() {\r\n            return this._ok;\r\n        },\r\n        getOriginalInput: function() {\r\n          return this._originalInput;\r\n        },\r\n        getFormat: function() {\r\n            return this._format;\r\n        },\r\n        getAlpha: function() {\r\n            return this._a;\r\n        },\r\n        getBrightness: function() {\r\n            var rgb = this.toRgb();\r\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n        },\r\n        setAlpha: function(value) {\r\n            this._a = boundAlpha(value);\r\n            this._roundA = mathRound(1000 * this._a) / 1000;\r\n            return this;\r\n        },\r\n        toHsv: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n        },\r\n        toHsvString: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n            return (this._a == 1) ?\r\n              \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n              \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHsl: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n        },\r\n        toHslString: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n            return (this._a == 1) ?\r\n              \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n              \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHex: function(allow3Char) {\r\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n        },\r\n        toHexString: function(allow3Char) {\r\n            return '#' + this.toHex(allow3Char);\r\n        },\r\n        toHex8: function() {\r\n            return rgbaToHex(this._r, this._g, this._b, this._a);\r\n        },\r\n        toHex8String: function() {\r\n            return '#' + this.toHex8();\r\n        },\r\n        toRgb: function() {\r\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n        },\r\n        toRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n              \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n        },\r\n        toPercentageRgb: function() {\r\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n        },\r\n        toPercentageRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n              \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n        },\r\n        toName: function() {\r\n            if (this._a === 0) {\r\n                return \"transparent\";\r\n            }\r\n\r\n            if (this._a < 1) {\r\n                return false;\r\n            }\r\n\r\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n        },\r\n        toFilter: function(secondColor) {\r\n            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\r\n            var secondHex8String = hex8String;\r\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n\r\n            if (secondColor) {\r\n                var s = Color(secondColor);\r\n                secondHex8String = s.toHex8String();\r\n            }\r\n\r\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n        },\r\n        toString: function(format) {\r\n            var formatSet = !!format;\r\n            format = format || this._format;\r\n\r\n            var formattedString = false;\r\n            var hasAlpha = this._a < 1 && this._a >= 0;\r\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\r\n\r\n            if (needsAlphaFormat) {\r\n                // Special case for \"transparent\", all other non-alpha formats\r\n                // will return rgba when there is transparency.\r\n                if (format === \"name\" && this._a === 0) {\r\n                    return this.toName();\r\n                }\r\n                return this.toRgbString();\r\n            }\r\n            if (format === \"rgb\") {\r\n                formattedString = this.toRgbString();\r\n            }\r\n            if (format === \"prgb\") {\r\n                formattedString = this.toPercentageRgbString();\r\n            }\r\n            if (format === \"hex\" || format === \"hex6\") {\r\n                formattedString = this.toHexString();\r\n            }\r\n            if (format === \"hex3\") {\r\n                formattedString = this.toHexString(true);\r\n            }\r\n            if (format === \"hex8\") {\r\n                formattedString = this.toHex8String();\r\n            }\r\n            if (format === \"name\") {\r\n                formattedString = this.toName();\r\n            }\r\n            if (format === \"hsl\") {\r\n                formattedString = this.toHslString();\r\n            }\r\n            if (format === \"hsv\") {\r\n                formattedString = this.toHsvString();\r\n            }\r\n\r\n            return formattedString || this.toHexString();\r\n        },\r\n\r\n        _applyModification: function(fn, args) {\r\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n            this._r = color._r;\r\n            this._g = color._g;\r\n            this._b = color._b;\r\n            this.setAlpha(color._a);\r\n            return this;\r\n        },\r\n        lighten: function() {\r\n            return this._applyModification(lighten, arguments);\r\n        },\r\n        brighten: function() {\r\n            return this._applyModification(brighten, arguments);\r\n        },\r\n        darken: function() {\r\n            return this._applyModification(darken, arguments);\r\n        },\r\n        desaturate: function() {\r\n            return this._applyModification(desaturate, arguments);\r\n        },\r\n        saturate: function() {\r\n            return this._applyModification(saturate, arguments);\r\n        },\r\n        greyscale: function() {\r\n            return this._applyModification(greyscale, arguments);\r\n        },\r\n        spin: function() {\r\n            return this._applyModification(spin, arguments);\r\n        },\r\n\r\n        _applyCombination: function(fn, args) {\r\n            return fn.apply(null, [this].concat([].slice.call(args)));\r\n        },\r\n        analogous: function() {\r\n            return this._applyCombination(analogous, arguments);\r\n        },\r\n        complement: function() {\r\n            return this._applyCombination(complement, arguments);\r\n        },\r\n        monochromatic: function() {\r\n            return this._applyCombination(monochromatic, arguments);\r\n        },\r\n        splitcomplement: function() {\r\n            return this._applyCombination(splitcomplement, arguments);\r\n        },\r\n        triad: function() {\r\n            return this._applyCombination(triad, arguments);\r\n        },\r\n        tetrad: function() {\r\n            return this._applyCombination(tetrad, arguments);\r\n        }\r\n\t});\r\n\r\n\r\n\r\n    // If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n    // String input requires \"1.0\" as input, so 1 will be treated as 1\r\n    Color.fromRatio = function(color, opts) {\r\n        if (typeof color == \"object\") {\r\n            var newColor = {};\r\n            for (var i in color) {\r\n                if (color.hasOwnProperty(i)) {\r\n                    if (i === \"a\") {\r\n                        newColor[i] = color[i];\r\n                    }\r\n                    else {\r\n                        newColor[i] = convertToPercentage(color[i]);\r\n                    }\r\n                }\r\n            }\r\n            color = newColor;\r\n        }\r\n\r\n        return Color(color, opts);\r\n    };\r\n\r\n    // `equals`\r\n    // Can be called with any Color input\r\n    Color.equals = function (color1, color2) {\r\n        if (!color1 || !color2) { return false; }\r\n        return Color(color1).toRgbString() == Color(color2).toRgbString();\r\n    };\r\n    \r\n    Color.random = function() {\r\n        return Color.fromRatio({\r\n            r: mathRandom(),\r\n            g: mathRandom(),\r\n            b: mathRandom()\r\n        });\r\n    };\r\n\r\n   // Modification Functions\r\n    // ----------------------\r\n    // Thanks to less.js for some of the basics here\r\n    // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n\r\n    function desaturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.s -= amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function saturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.s += amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function greyscale(color) {\r\n        return Color(color).desaturate(100);\r\n    }\r\n\r\n    function lighten (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.l += amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function brighten(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var rgb = Color(color).toRgb();\r\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n        return Color(rgb);\r\n    }\r\n\r\n    function darken (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.l -= amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return Color(hsl);\r\n    }\r\n\r\n    // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n    // Values outside of this range will be wrapped into this range.\r\n    function spin(color, amount) {\r\n        var hsl = Color(color).toHsl();\r\n        var hue = (mathRound(hsl.h) + amount) % 360;\r\n        hsl.h = hue < 0 ? 360 + hue : hue;\r\n        return Color(hsl);\r\n    }\r\n\r\n    // Combination Functions\r\n    // ---------------------\r\n    // Thanks to jQuery xColor for some of the ideas behind these\r\n    // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n\r\n    function complement(color) {\r\n        var hsl = Color(color).toHsl();\r\n        hsl.h = (hsl.h + 180) % 360;\r\n        return Color(hsl);\r\n    }\r\n\r\n    function triad(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function tetrad(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function splitcomplement(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n            Color({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n        ];\r\n    }\r\n\r\n    function analogous(color, results, slices) {\r\n        results = results || 6;\r\n        slices = slices || 30;\r\n\r\n        var hsl = Color(color).toHsl();\r\n        var part = 360 / slices;\r\n        var ret = [Color(color)];\r\n\r\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n            hsl.h = (hsl.h + part) % 360;\r\n            ret.push(Color(hsl));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function monochromatic(color, results) {\r\n        results = results || 6;\r\n        var hsv = Color(color).toHsv();\r\n        var h = hsv.h, s = hsv.s, v = hsv.v;\r\n        var ret = [];\r\n        var modification = 1 / results;\r\n\r\n        while (results--) {\r\n            ret.push(Color({ h: h, s: s, v: v}));\r\n            v = (v + modification) % 1;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    // Utility Functions\r\n    // ---------------------\r\n\r\n    Color.mix = function(color1, color2, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 50);\r\n\r\n        var rgb1 = Color(color1).toRgb();\r\n        var rgb2 = Color(color2).toRgb();\r\n\r\n        var p = amount / 100;\r\n        var w = p * 2 - 1;\r\n        var a = rgb2.a - rgb1.a;\r\n\r\n        var w1;\r\n\r\n        if (w * a == -1) {\r\n            w1 = w;\r\n        } else {\r\n            w1 = (w + a) / (1 + w * a);\r\n        }\r\n\r\n        w1 = (w1 + 1) / 2;\r\n\r\n        var w2 = 1 - w1;\r\n\r\n        var rgba = {\r\n            r: rgb2.r * w1 + rgb1.r * w2,\r\n            g: rgb2.g * w1 + rgb1.g * w2,\r\n            b: rgb2.b * w1 + rgb1.b * w2,\r\n            a: rgb2.a * p  + rgb1.a * (1 - p)\r\n        };\r\n\r\n        return Color(rgba);\r\n    };\r\n\r\n\r\n    // Readability Functions\r\n    // ---------------------\r\n    // <http://www.w3.org/TR/AERT#color-contrast>\r\n\r\n    // `readability`\r\n    // Analyze the 2 colors and returns an object with the following properties:\r\n    //    `brightness`: difference in brightness between the two colors\r\n    //    `color`: difference in color/hue between the two colors\r\n    Color.readability = function(color1, color2) {\r\n        var c1 = Color(color1);\r\n        var c2 = Color(color2);\r\n        var rgb1 = c1.toRgb();\r\n        var rgb2 = c2.toRgb();\r\n        var brightnessA = c1.getBrightness();\r\n        var brightnessB = c2.getBrightness();\r\n        var colorDiff = (\r\n            Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\r\n            Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\r\n            Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\r\n        );\r\n\r\n        return {\r\n            brightness: Math.abs(brightnessA - brightnessB),\r\n            color: colorDiff\r\n        };\r\n    };\r\n\r\n    // `readable`\r\n    // http://www.w3.org/TR/AERT#color-contrast\r\n    // Ensure that foreground and background color combinations provide sufficient contrast.\r\n    // *Example*\r\n    //    Color.isReadable(\"#000\", \"#111\") => false\r\n    Color.isReadable = function(color1, color2) {\r\n        var readability = Color.readability(color1, color2);\r\n        return readability.brightness > 125 && readability.color > 500;\r\n    };\r\n\r\n    // `mostReadable`\r\n    // Given a base color and a list of possible foreground or background\r\n    // colors for that base, returns the most readable color.\r\n    // *Example*\r\n    //    Color.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\"\r\n    Color.mostReadable = function(baseColor, colorList) {\r\n        var bestColor = null;\r\n        var bestScore = 0;\r\n        var bestIsReadable = false;\r\n        for (var i=0; i < colorList.length; i++) {\r\n\r\n            // We normalize both around the \"acceptable\" breaking point,\r\n            // but rank brightness constrast higher than hue.\r\n\r\n            var readability = Color.readability(baseColor, colorList[i]);\r\n            var readable = readability.brightness > 125 && readability.color > 500;\r\n            var score = 3 * (readability.brightness / 125) + (readability.color / 500);\r\n\r\n            if ((readable && ! bestIsReadable) ||\r\n                (readable && bestIsReadable && score > bestScore) ||\r\n                ((! readable) && (! bestIsReadable) && score > bestScore)) {\r\n                bestIsReadable = readable;\r\n                bestScore = score;\r\n                bestColor = Color(colorList[i]);\r\n            }\r\n        }\r\n        return bestColor;\r\n    };\r\n\r\n\r\n\treturn Color;\r\n});\r\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-colorpicker/ColorPicker',[\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-data-color/colors\",\r\n    \"skylark-data-color/Color\",\r\n    \"skylark-widgets-base/Widget\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, colors, Color,  Widget) {\r\n    \"use strict\";\r\n\r\n    var noop = langx.noop;\r\n\r\n    var defaultOpts = {\r\n\r\n        // Callbacks\r\n        beforeShow: noop,\r\n        move: noop,\r\n        change: noop,\r\n        show: noop,\r\n        hide: noop,\r\n\r\n        // Options\r\n        color: false,\r\n        flat: false,\r\n        showInput: false,\r\n        allowEmpty: false,\r\n        showButtons: true,\r\n        clickoutFiresChange: true,\r\n        showInitial: false,\r\n        showPalette: false,\r\n        showPaletteOnly: false,\r\n        hideAfterPaletteSelect: false,\r\n        togglePaletteOnly: false,\r\n        showSelectionPalette: true,\r\n        localStorageKey: false,\r\n        appendTo: \"body\",\r\n        maxSelectionSize: 7,\r\n        cancelText: \"cancel\",\r\n        chooseText: \"choose\",\r\n        togglePaletteMoreText: \"more\",\r\n        togglePaletteLessText: \"less\",\r\n        clearText: \"Clear Color Selection\",\r\n        noColorSelectedText: \"No Color Selected\",\r\n        preferredFormat: false,\r\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\r\n        containerClassName: \"\",\r\n        replacerClassName: \"\",\r\n        showAlpha: false,\r\n        theme: \"sp-light\",\r\n        palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\r\n        selectionPalette: [],\r\n        disabled: false,\r\n        offset: null\r\n    },\r\n    pickers = [],\r\n    replaceInput = [\r\n        \"<div class='sp-replacer'>\",\r\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\r\n            \"<div class='sp-dd'>&#9660;</div>\",\r\n        \"</div>\"\r\n    ].join(''),\r\n    \r\n    markup = (function () {\r\n\r\n        // IE7-10 does not support gradients with multiple stops, so we need to simulate\r\n        //  that for the rainbow slider with 8 divs that each have a single gradient\r\n        var gradientFix = \"\";\r\n        if (browser.isIE) {\r\n            for (var i = 1; i <= 6; i++) {\r\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\r\n            }\r\n        }\r\n\r\n        return [\r\n            \"<div class='sp-container sp-hidden'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                                gradientFix,\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\r\n\r\n    function paletteTemplate (p, color, className, opts) {\r\n        var html = [];\r\n        for (var i = 0; i < p.length; i++) {\r\n            var current = p[i];\r\n            if(current) {\r\n                var tiny = colors.Color(current);\r\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\r\n                c += (Color.equals(color, current)) ? \" sp-thumb-active\" : \"\";\r\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\r\n                var swatchStyle = \"background-color:\" + tiny.toRgbString();\r\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\r\n            } else {\r\n                var cls = 'sp-clear-display';\r\n                html.push($('<div />')\r\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\r\n                        .attr('title', opts.noColorSelectedText)\r\n                    )\r\n                    .html()\r\n                );\r\n            }\r\n        }\r\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\r\n    }\r\n\r\n    function hideAll() {\r\n        for (var i = 0; i < pickers.length; i++) {\r\n            if (pickers[i]) {\r\n                pickers[i].hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    function instanceOptions(o, callbackContext) {\r\n        var opts = langx.mixin({}, defaultOpts, o);\r\n        opts.callbacks = {\r\n            'move': bind(opts.move, callbackContext),\r\n            'change': bind(opts.change, callbackContext),\r\n            'show': bind(opts.show, callbackContext),\r\n            'hide': bind(opts.hide, callbackContext),\r\n            'beforeShow': bind(opts.beforeShow, callbackContext)\r\n        };\r\n\r\n        return opts;\r\n    }\r\n\r\n\r\n\r\n    var ColorPicker = langx.Evented.inherit({\r\n        klassName : \"ColorPicker\",\r\n\r\n        init:function (element, o) {\r\n\r\n            var opts = instanceOptions(o, element),\r\n                flat = opts.flat,\r\n                showSelectionPalette = opts.showSelectionPalette,\r\n                localStorageKey = opts.localStorageKey,\r\n                theme = opts.theme,\r\n                callbacks = opts.callbacks,\r\n                resize = langx.debounce(reflow, 10),\r\n                visible = false,\r\n                isDragging = false,\r\n                dragWidth = 0,\r\n                dragHeight = 0,\r\n                dragHelperHeight = 0,\r\n                slideHeight = 0,\r\n                slideWidth = 0,\r\n                alphaWidth = 0,\r\n                alphaSlideHelperWidth = 0,\r\n                slideHelperHeight = 0,\r\n                currentHue = 0,\r\n                currentSaturation = 0,\r\n                currentValue = 0,\r\n                currentAlpha = 1,\r\n                palette = [],\r\n                paletteArray = [],\r\n                paletteLookup = {},\r\n                selectionPalette = opts.selectionPalette.slice(0),\r\n                maxSelectionSize = opts.maxSelectionSize,\r\n                draggingClass = \"sp-dragging\",\r\n                shiftMovementDirection = null;\r\n\r\n            var doc = element.ownerDocument,\r\n                body = doc.body,\r\n                boundElement = $(element),\r\n                disabled = false,\r\n                container = $(markup, doc).addClass(theme),\r\n                pickerContainer = container.find(\".sp-picker-container\"),\r\n                dragger = container.find(\".sp-color\"),\r\n                dragHelper = container.find(\".sp-dragger\"),\r\n                slider = container.find(\".sp-hue\"),\r\n                slideHelper = container.find(\".sp-slider\"),\r\n                alphaSliderInner = container.find(\".sp-alpha-inner\"),\r\n                alphaSlider = container.find(\".sp-alpha\"),\r\n                alphaSlideHelper = container.find(\".sp-alpha-handle\"),\r\n                textInput = container.find(\".sp-input\"),\r\n                paletteContainer = container.find(\".sp-palette\"),\r\n                initialColorContainer = container.find(\".sp-initial\"),\r\n                cancelButton = container.find(\".sp-cancel\"),\r\n                clearButton = container.find(\".sp-clear\"),\r\n                chooseButton = container.find(\".sp-choose\"),\r\n                toggleButton = container.find(\".sp-palette-toggle\"),\r\n                isInput = boundElement.is(\"input\"),\r\n                isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\r\n                shouldReplace = isInput && !flat,\r\n                replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\r\n                offsetElement = (shouldReplace) ? replacer : boundElement,\r\n                previewElement = replacer.find(\".sp-preview-inner\"),\r\n                initialColor = opts.color || (isInput && boundElement.val()),\r\n                colorOnShow = false,\r\n                currentPreferredFormat = opts.preferredFormat,\r\n                clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\r\n                isEmpty = !initialColor,\r\n                allowEmpty = opts.allowEmpty && !isInputTypeColor;\r\n\r\n            function applyOptions() {\r\n\r\n                if (opts.showPaletteOnly) {\r\n                    opts.showPalette = true;\r\n                }\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n\r\n                if (opts.palette) {\r\n                    palette = opts.palette.slice(0);\r\n                    paletteArray = langx.isArray(palette[0]) ? palette : [palette];\r\n                    paletteLookup = {};\r\n                    for (var i = 0; i < paletteArray.length; i++) {\r\n                        for (var j = 0; j < paletteArray[i].length; j++) {\r\n                            var rgb = Color(paletteArray[i][j]).toRgbString();\r\n                            paletteLookup[rgb] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                container.toggleClass(\"sp-flat\", flat);\r\n                container.toggleClass(\"sp-input-disabled\", !opts.showInput);\r\n                container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\r\n                container.toggleClass(\"sp-clear-enabled\", allowEmpty);\r\n                container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\r\n                container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\r\n                container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\r\n                container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\r\n                container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\r\n                container.addClass(opts.className).addClass(opts.containerClassName);\r\n\r\n                reflow();\r\n            }\r\n\r\n            function initialize() {\r\n\r\n                if (browser.isIE) {\r\n                    container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\r\n                }\r\n\r\n                applyOptions();\r\n\r\n                if (shouldReplace) {\r\n                    boundElement.after(replacer).hide();\r\n                }\r\n\r\n                if (!allowEmpty) {\r\n                    clearButton.hide();\r\n                }\r\n\r\n                if (flat) {\r\n                    boundElement.after(container).hide();\r\n                }\r\n                else {\r\n\r\n                    var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\r\n                    if (appendTo.length !== 1) {\r\n                        appendTo = $(\"body\");\r\n                    }\r\n\r\n                    appendTo.append(container);\r\n                }\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                offsetElement.on(\"click.ColorPicker touchstart.ColorPicker\", function (e) {\r\n                    if (!disabled) {\r\n                        toggle();\r\n                    }\r\n\r\n                    e.stopPropagation();\r\n\r\n                    if (!$(e.target).is(\"input\")) {\r\n                        e.preventDefault();\r\n                    }\r\n                });\r\n\r\n                if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\r\n                    disable();\r\n                }\r\n\r\n                // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\r\n                container.click(stopPropagation);\r\n\r\n                // Handle user typed input\r\n                textInput.change(setFromTextInput);\r\n                textInput.on(\"paste\", function () {\r\n                    setTimeout(setFromTextInput, 1);\r\n                });\r\n                textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\r\n\r\n                cancelButton.text(opts.cancelText);\r\n                cancelButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    revert();\r\n                    hide();\r\n                });\r\n\r\n                clearButton.attr(\"title\", opts.clearText);\r\n                clearButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    isEmpty = true;\r\n                    move();\r\n\r\n                    if(flat) {\r\n                        //for the flat style, this is a change event\r\n                        updateOriginalInput(true);\r\n                    }\r\n                });\r\n\r\n                chooseButton.text(opts.chooseText);\r\n                chooseButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    if (browser.isIE && textInput.is(\":focus\")) {\r\n                        textInput.trigger('change');\r\n                    }\r\n\r\n                    if (isValid()) {\r\n                        updateOriginalInput(true);\r\n                        hide();\r\n                    }\r\n                });\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n                toggleButton.on(\"click.spectrum\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    opts.showPaletteOnly = !opts.showPaletteOnly;\r\n\r\n                    // To make sure the Picker area is drawn on the right, next to the\r\n                    // Palette area (and not below the palette), first move the Palette\r\n                    // to the left to make space for the picker, plus 5px extra.\r\n                    // The 'applyOptions' function puts the whole container back into place\r\n                    // and takes care of the button-text and the sp-palette-only CSS class.\r\n                    if (!opts.showPaletteOnly && !flat) {\r\n                        container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\r\n                    }\r\n                    applyOptions();\r\n                });\r\n\r\n                draggable(alphaSlider, function (dragX, dragY, e) {\r\n                    currentAlpha = (dragX / alphaWidth);\r\n                    isEmpty = false;\r\n                    if (e.shiftKey) {\r\n                        currentAlpha = Math.round(currentAlpha * 10) / 10;\r\n                    }\r\n\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(slider, function (dragX, dragY) {\r\n                    currentHue = parseFloat(dragY / slideHeight);\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(dragger, function (dragX, dragY, e) {\r\n\r\n                    // shift+drag should snap the movement to either the x or y axis.\r\n                    if (!e.shiftKey) {\r\n                        shiftMovementDirection = null;\r\n                    }\r\n                    else if (!shiftMovementDirection) {\r\n                        var oldDragX = currentSaturation * dragWidth;\r\n                        var oldDragY = dragHeight - (currentValue * dragHeight);\r\n                        var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\r\n\r\n                        shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\r\n                    }\r\n\r\n                    var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\r\n                    var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\r\n\r\n                    if (setSaturation) {\r\n                        currentSaturation = parseFloat(dragX / dragWidth);\r\n                    }\r\n                    if (setValue) {\r\n                        currentValue = parseFloat((dragHeight - dragY) / dragHeight);\r\n                    }\r\n\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n\r\n                    move();\r\n\r\n                }, dragStart, dragStop);\r\n\r\n                if (!!initialColor) {\r\n                    set(initialColor);\r\n\r\n                    // In case color was black - update the preview UI and set the format\r\n                    // since the set function will not run (default color is black).\r\n                    updateUI();\r\n                    currentPreferredFormat = opts.preferredFormat || Color(initialColor).format;\r\n\r\n                    addColorToSelectionPalette(initialColor);\r\n                }\r\n                else {\r\n                    updateUI();\r\n                }\r\n\r\n                if (flat) {\r\n                    show();\r\n                }\r\n\r\n                function paletteElementClick(e) {\r\n                    if (e.data && e.data.ignore) {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n                    }\r\n                    else {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n\r\n                        // If the picker is going to close immediately, a palette selection\r\n                        // is a change.  Otherwise, it's a move only.\r\n                        if (opts.hideAfterPaletteSelect) {\r\n                            updateOriginalInput(true);\r\n                            hide();\r\n                        } else {\r\n                            updateOriginalInput();\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                var paletteEvent = browser.isIE ? \"mousedown.ColorPicker\" : \"click.ColorPicker touchstart.ColorPicker\";\r\n                paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\r\n                initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\r\n            }\r\n\r\n            function updateSelectionPaletteFromStorage() {\r\n\r\n                if (localStorageKey && window.localStorage) {\r\n\r\n                    // Migrate old palettes over to new format.  May want to remove this eventually.\r\n                    try {\r\n                        var oldPalette = window.localStorage[localStorageKey].split(\",#\");\r\n                        if (oldPalette.length > 1) {\r\n                            delete window.localStorage[localStorageKey];\r\n                            langx.each(oldPalette, function(i, c) {\r\n                                 addColorToSelectionPalette(c);\r\n                            });\r\n                        }\r\n                    }\r\n                    catch(e) { }\r\n\r\n                    try {\r\n                        selectionPalette = window.localStorage[localStorageKey].split(\";\");\r\n                    }\r\n                    catch (e) { }\r\n                }\r\n            }\r\n\r\n            function addColorToSelectionPalette(color) {\r\n                if (showSelectionPalette) {\r\n                    var rgb = Color(color).toRgbString();\r\n                    if (!paletteLookup[rgb] && langx.inArray(rgb, selectionPalette) === -1) {\r\n                        selectionPalette.push(rgb);\r\n                        while(selectionPalette.length > maxSelectionSize) {\r\n                            selectionPalette.shift();\r\n                        }\r\n                    }\r\n\r\n                    if (localStorageKey && window.localStorage) {\r\n                        try {\r\n                            window.localStorage[localStorageKey] = selectionPalette.join(\";\");\r\n                        }\r\n                        catch(e) { }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function getUniqueSelectionPalette() {\r\n                var unique = [];\r\n                if (opts.showPalette) {\r\n                    for (var i = 0; i < selectionPalette.length; i++) {\r\n                        var rgb = Color(selectionPalette[i]).toRgbString();\r\n\r\n                        if (!paletteLookup[rgb]) {\r\n                            unique.push(selectionPalette[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return unique.reverse().slice(0, opts.maxSelectionSize);\r\n            }\r\n\r\n            function drawPalette() {\r\n\r\n                var currentColor = get();\r\n\r\n                var html = langx.map(paletteArray, function (palette, i) {\r\n                    return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\r\n                });\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                if (selectionPalette) {\r\n                    html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\r\n                }\r\n\r\n                paletteContainer.html(html.join(\"\"));\r\n            }\r\n\r\n            function drawInitial() {\r\n                if (opts.showInitial) {\r\n                    var initial = colorOnShow;\r\n                    var current = get();\r\n                    initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\r\n                }\r\n            }\r\n\r\n            function dragStart() {\r\n                if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\r\n                    reflow();\r\n                }\r\n                isDragging = true;\r\n                container.addClass(draggingClass);\r\n                shiftMovementDirection = null;\r\n                boundElement.trigger('dragstart.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function dragStop() {\r\n                isDragging = false;\r\n                container.removeClass(draggingClass);\r\n                boundElement.trigger('dragstop.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function setFromTextInput() {\r\n\r\n                var value = textInput.val();\r\n\r\n                if ((value === null || value === \"\") && allowEmpty) {\r\n                    set(null);\r\n                    move();\r\n                    updateOriginalInput();\r\n                }\r\n                else {\r\n                    var tiny = Color(value);\r\n                    if (tiny.isValid()) {\r\n                        set(tiny);\r\n                        move();\r\n                        updateOriginalInput();\r\n                    }\r\n                    else {\r\n                        textInput.addClass(\"sp-validation-error\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            function toggle() {\r\n                if (visible) {\r\n                    hide();\r\n                }\r\n                else {\r\n                    show();\r\n                }\r\n            }\r\n\r\n            function show() {\r\n                var event = eventer.create('beforeShow.ColorPicker');\r\n\r\n                if (visible) {\r\n                    reflow();\r\n                    return;\r\n                }\r\n\r\n                boundElement.trigger(event, [ get() ]);\r\n\r\n                if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\r\n                    return;\r\n                }\r\n\r\n                hideAll();\r\n                visible = true;\r\n\r\n                $(doc).on(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).on(\"click.ColorPicker\", clickout);\r\n                $(window).on(\"resize.ColorPicker\", resize);\r\n                replacer.addClass(\"sp-active\");\r\n                container.removeClass(\"sp-hidden\");\r\n\r\n                reflow();\r\n                updateUI();\r\n\r\n                colorOnShow = get();\r\n\r\n                drawInitial();\r\n                callbacks.show(colorOnShow);\r\n                boundElement.trigger('show.ColorPicker', [ colorOnShow ]);\r\n            }\r\n\r\n            function onkeydown(e) {\r\n                // Close on ESC\r\n                if (e.keyCode === 27) {\r\n                    hide();\r\n                }\r\n            }\r\n\r\n            function clickout(e) {\r\n                // Return on right click.\r\n                if (e.button == 2) { return; }\r\n\r\n                // If a drag event was happening during the mouseup, don't hide\r\n                // on click.\r\n                if (isDragging) { return; }\r\n\r\n                if (clickoutFiresChange) {\r\n                    updateOriginalInput(true);\r\n                }\r\n                else {\r\n                    revert();\r\n                }\r\n                hide();\r\n            }\r\n\r\n            function hide() {\r\n                // Return if hiding is unnecessary\r\n                if (!visible || flat) { return; }\r\n                visible = false;\r\n\r\n                $(doc).off(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).off(\"click.ColorPicker\", clickout);\r\n                $(window).off(\"resize.ColorPicker\", resize);\r\n\r\n                replacer.removeClass(\"sp-active\");\r\n                container.addClass(\"sp-hidden\");\r\n\r\n                callbacks.hide(get());\r\n                boundElement.trigger('hide.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function revert() {\r\n                set(colorOnShow, true);\r\n                updateOriginalInput(true);\r\n            }\r\n\r\n            function set(color, ignoreFormatChange) {\r\n                if (Color.equals(color, get())) {\r\n                    // Update UI just in case a validation error needs\r\n                    // to be cleared.\r\n                    updateUI();\r\n                    return;\r\n                }\r\n\r\n                var newColor, newHsv;\r\n                if (!color && allowEmpty) {\r\n                    isEmpty = true;\r\n                } else {\r\n                    isEmpty = false;\r\n                    newColor = colors.Color(color);\r\n                    newHsv = newColor.toHsv();\r\n\r\n                    currentHue = (newHsv.h % 360) / 360;\r\n                    currentSaturation = newHsv.s;\r\n                    currentValue = newHsv.v;\r\n                    currentAlpha = newHsv.a;\r\n                }\r\n                updateUI();\r\n\r\n                if (newColor && newColor.isValid() && !ignoreFormatChange) {\r\n                    currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\r\n                }\r\n            }\r\n\r\n            function get(opts) {\r\n                opts = opts || { };\r\n\r\n                if (allowEmpty && isEmpty) {\r\n                    return null;\r\n                }\r\n\r\n                return Color.fromRatio({\r\n                    h: currentHue,\r\n                    s: currentSaturation,\r\n                    v: currentValue,\r\n                    a: Math.round(currentAlpha * 1000) / 1000\r\n                }, { format: opts.format || currentPreferredFormat });\r\n            }\r\n\r\n            function isValid() {\r\n                return !textInput.hasClass(\"sp-validation-error\");\r\n            }\r\n\r\n            function move() {\r\n                updateUI();\r\n\r\n                callbacks.move(get());\r\n                boundElement.trigger('move.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function updateUI() {\r\n\r\n                textInput.removeClass(\"sp-validation-error\");\r\n\r\n                updateHelperLocations();\r\n\r\n                // Update dragger background color (gradients take care of saturation and value).\r\n                var flatColor = Color.fromRatio({ h: currentHue, s: 1, v: 1 });\r\n                dragger.css(\"background-color\", flatColor.toHexString());\r\n\r\n                // Get a format that alpha will be included in (hex and names ignore alpha)\r\n                var format = currentPreferredFormat;\r\n                if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\r\n                    if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\r\n                        format = \"rgb\";\r\n                    }\r\n                }\r\n\r\n                var realColor = get({ format: format }),\r\n                    displayColor = '';\r\n\r\n                 //reset background info for preview element\r\n                previewElement.removeClass(\"sp-clear-display\");\r\n                previewElement.css('background-color', 'transparent');\r\n\r\n                if (!realColor && allowEmpty) {\r\n                    // Update the replaced elements background with icon indicating no color selection\r\n                    previewElement.addClass(\"sp-clear-display\");\r\n                }\r\n                else {\r\n                    var realHex = realColor.toHexString(),\r\n                        realRgb = realColor.toRgbString();\r\n\r\n                    // Update the replaced elements background color (with actual selected color)\r\n                    previewElement.css(\"background-color\", realRgb);\r\n\r\n                    if (opts.showAlpha) {\r\n                        var rgb = realColor.toRgb();\r\n                        rgb.a = 0;\r\n                        var realAlpha = Color(rgb).toRgbString();\r\n                        var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\r\n\r\n                        if (browser.isIE) {\r\n                            alphaSliderInner.css(\"filter\", Color(realAlpha).toFilter({ gradientType: 1 }, realHex));\r\n                        }\r\n                        else {\r\n                            alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\r\n                            // Use current syntax gradient on unprefixed property.\r\n                            alphaSliderInner.css(\"background\",\r\n                                \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\r\n                        }\r\n                    }\r\n\r\n                    displayColor = realColor.toString(format);\r\n                }\r\n\r\n                // Update the text entry input as it changes happen\r\n                if (opts.showInput) {\r\n                    textInput.val(displayColor);\r\n                }\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                drawInitial();\r\n            }\r\n\r\n            function updateHelperLocations() {\r\n                var s = currentSaturation;\r\n                var v = currentValue;\r\n\r\n                if(allowEmpty && isEmpty) {\r\n                    //if selected color is empty, hide the helpers\r\n                    alphaSlideHelper.hide();\r\n                    slideHelper.hide();\r\n                    dragHelper.hide();\r\n                }\r\n                else {\r\n                    //make sure helpers are visible\r\n                    alphaSlideHelper.show();\r\n                    slideHelper.show();\r\n                    dragHelper.show();\r\n\r\n                    // Where to show the little circle in that displays your current selected color\r\n                    var dragX = s * dragWidth;\r\n                    var dragY = dragHeight - (v * dragHeight);\r\n                    dragX = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\r\n                    );\r\n                    dragY = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\r\n                    );\r\n                    dragHelper.css({\r\n                        \"top\": dragY + \"px\",\r\n                        \"left\": dragX + \"px\"\r\n                    });\r\n\r\n                    var alphaX = currentAlpha * alphaWidth;\r\n                    alphaSlideHelper.css({\r\n                        \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\r\n                    });\r\n\r\n                    // Where to show the bar that displays your current selected hue\r\n                    var slideY = (currentHue) * slideHeight;\r\n                    slideHelper.css({\r\n                        \"top\": (slideY - slideHelperHeight) + \"px\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            function updateOriginalInput(fireCallback) {\r\n                var color = get(),\r\n                    displayColor = '',\r\n                    hasChanged = !Color.equals(color, colorOnShow);\r\n\r\n                if (color) {\r\n                    displayColor = color.toString(currentPreferredFormat);\r\n                    // Update the selection palette with the current color\r\n                    addColorToSelectionPalette(color);\r\n                }\r\n\r\n                if (isInput) {\r\n                    boundElement.val(displayColor);\r\n                }\r\n\r\n                if (fireCallback && hasChanged) {\r\n                    callbacks.change(color);\r\n                    boundElement.trigger('change', [ color ]);\r\n                }\r\n            }\r\n\r\n            function reflow() {\r\n                if (!visible) {\r\n                    return; // Calculations would be useless and wouldn't be reliable anyways\r\n                }\r\n                dragWidth = dragger.width();\r\n                dragHeight = dragger.height();\r\n                dragHelperHeight = dragHelper.height();\r\n                slideWidth = slider.width();\r\n                slideHeight = slider.height();\r\n                slideHelperHeight = slideHelper.height();\r\n                alphaWidth = alphaSlider.width();\r\n                alphaSlideHelperWidth = alphaSlideHelper.width();\r\n\r\n                if (!flat) {\r\n                    container.css(\"position\", \"absolute\");\r\n                    if (opts.offset) {\r\n                        container.offset(opts.offset);\r\n                    } else {\r\n                        container.offset(getOffset(container, offsetElement));\r\n                    }\r\n                }\r\n\r\n                updateHelperLocations();\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                boundElement.trigger('reflow.ColorPicker');\r\n            }\r\n\r\n            function destroy() {\r\n                boundElement.show();\r\n                offsetElement.off(\"click.ColorPicker touchstart.ColorPicker\");\r\n                container.remove();\r\n                replacer.remove();\r\n                pickers[spect.id] = null;\r\n            }\r\n\r\n            function option(optionName, optionValue) {\r\n                if (optionName === undefined) {\r\n                    return langx.mixin({}, opts);\r\n                }\r\n                if (optionValue === undefined) {\r\n                    return opts[optionName];\r\n                }\r\n\r\n                opts[optionName] = optionValue;\r\n\r\n                if (optionName === \"preferredFormat\") {\r\n                    currentPreferredFormat = opts.preferredFormat;\r\n                }\r\n                applyOptions();\r\n            }\r\n\r\n            function enable() {\r\n                disabled = false;\r\n                boundElement.attr(\"disabled\", false);\r\n                offsetElement.removeClass(\"sp-disabled\");\r\n            }\r\n\r\n            function disable() {\r\n                hide();\r\n                disabled = true;\r\n                boundElement.attr(\"disabled\", true);\r\n                offsetElement.addClass(\"sp-disabled\");\r\n            }\r\n\r\n            function setOffset(coord) {\r\n                opts.offset = coord;\r\n                reflow();\r\n            }\r\n\r\n            initialize();\r\n\r\n            var spect = {\r\n                show: show,\r\n                hide: hide,\r\n                toggle: toggle,\r\n                reflow: reflow,\r\n                option: option,\r\n                enable: enable,\r\n                disable: disable,\r\n                offset: setOffset,\r\n                set: function (c) {\r\n                    set(c);\r\n                    updateOriginalInput();\r\n                },\r\n                get: get,\r\n                destroy: destroy,\r\n                container: container\r\n            };\r\n\r\n            spect.id = pickers.push(spect) - 1;\r\n\r\n            return spect;\r\n        }\r\n    });\r\n\r\n\r\n    /**\r\n    * checkOffset - get the offset below/above and left/right element depending on screen position\r\n    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\r\n    */\r\n    function getOffset(picker, input) {\r\n        var extraY = 0;\r\n        var dpWidth = picker.outerWidth();\r\n        var dpHeight = picker.outerHeight();\r\n        var inputHeight = input.outerHeight();\r\n        var doc = picker[0].ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\r\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\r\n        var offset = input.offset();\r\n        var offsetLeft = offset.left;\r\n        var offsetTop = offset.top;\r\n\r\n        offsetTop += inputHeight;\r\n\r\n        offsetLeft -=\r\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\r\n            Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\r\n\r\n        offsetTop -=\r\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\r\n            Math.abs(dpHeight + inputHeight - extraY) : extraY));\r\n\r\n        return {\r\n            top: offsetTop,\r\n            bottom: offset.bottom,\r\n            left: offsetLeft,\r\n            right: offset.right,\r\n            width: offset.width,\r\n            height: offset.height\r\n        };\r\n    }\r\n\r\n    /**\r\n    * stopPropagation - makes the code only doing this a little easier to read in line\r\n    */\r\n    function stopPropagation(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n    * Create a function bound to a given object\r\n    * Thanks to underscore.js\r\n    */\r\n    function bind(func, obj) {\r\n        var slice = Array.prototype.slice;\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(obj, args.concat(slice.call(arguments)));\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n    * Define a query plugin\r\n    */\r\n    var dataID = \"ColorPicker.id\";\r\n    \r\n    function Plugin(opts, extra) {\r\n\r\n        if (typeof opts == \"string\") {\r\n\r\n            var returnValue = this;\r\n            var args = Array.prototype.slice.call( arguments, 1 );\r\n\r\n            this.each(function () {\r\n                var spect = pickers[$(this).data(dataID)];\r\n                if (spect) {\r\n                    var method = spect[opts];\r\n                    if (!method) {\r\n                        throw new Error( \"skylark-ui-colorpicker: no such method: '\" + opts + \"'\" );\r\n                    }\r\n\r\n                    if (opts == \"get\") {\r\n                        returnValue = spect.get();\r\n                    }\r\n                    else if (opts == \"container\") {\r\n                        returnValue = spect.container;\r\n                    }\r\n                    else if (opts == \"option\") {\r\n                        returnValue = spect.option.apply(spect, args);\r\n                    }\r\n                    else if (opts == \"destroy\") {\r\n                        spect.destroy();\r\n                        $(this).removeData(dataID);\r\n                    }\r\n                    else {\r\n                        method.apply(spect, args);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        // Initializing a new instance of ColorPicker\r\n        return this.colorPicker(\"destroy\").each(function () {\r\n            var options = langx.mixin({}, $(this).data(), opts);\r\n            var spect = ColorPicker(this, options);\r\n            $(this).data(dataID, spect.id);\r\n        });\r\n    }\r\n\r\n    ColorPicker.load = true;\r\n    ColorPicker.loadOpts = {};\r\n    ColorPicker.draggable = draggable;\r\n    ColorPicker.defaults = defaultOpts;\r\n\r\n    ColorPicker.localization = { };\r\n    ColorPicker.palettes = { };\r\n\r\n    $.fn.colorPicker = Plugin;\r\n\r\n    return skylark.attach(\"widgets.ColorPicker\",ColorPicker);\r\n\r\n});\r\n\ndefine('skylark-widgets-colorpicker/i18n/texts_ja',[\r\n\t\"../ColorPicker\"\r\n],function(ColorPicker) {\r\n    var localization = ColorPicker.localization[\"ja\"] = {\r\n        cancelText: \"中止\",\r\n        chooseText: \"選択\"\r\n    };\r\n\r\n    return localization;\r\n});\ndefine('skylark-widgets-colorpicker/i18n/texts_zh-cn',[\r\n\t\"../ColorPicker\"\r\n],function(ColorPicker) {\r\n    var localization = ColorPicker.localization[\"zh-cn\"] = {\r\n        cancelText: \"取消\",\r\n        chooseText: \"选择\",\r\n        clearText: \"清除\",\r\n        togglePaletteMoreText: \"更多选项\",\r\n        togglePaletteLessText: \"隐藏\",\r\n        noColorSelectedText: \"尚未选择任何颜色\"\r\n    };\r\n\r\n    return localization;\r\n\r\n});\r\n\ndefine('skylark-widgets-colorpicker/i18n/texts_zh-tw',[\r\n\t\"../ColorPicker\"\r\n],function(ColorPicker) {\r\n    var localization = ColorPicker.localization[\"zh-tw\"] = {\r\n        cancelText: \"取消\",\r\n        chooseText: \"選擇\",\r\n        clearText: \"清除\",\r\n        togglePaletteMoreText: \"更多選項\",\r\n        togglePaletteLessText: \"隱藏\",\r\n        noColorSelectedText: \"尚未選擇任何顏色\"\r\n    };\r\n\r\n    return localization;\r\n\r\n});\ndefine('skylark-widgets-colorpicker/main',[\r\n    \"./ColorPicker\",\r\n    \"./i18n/texts_ja\",\r\n    \"./i18n/texts_zh-cn\",\r\n    \"./i18n/texts_zh-tw\"\r\n], function(ColorPicker) {\r\n    return ColorPicker;\r\n});\r\n\ndefine('skylark-widgets-colorpicker', ['skylark-widgets-colorpicker/main'], function (main) { return main; });\n\n"]}