{"version":3,"sources":["ColorPicker.js"],"names":["define","skylark","langx","browser","noder","eventer","finder","$","colors","Color","ui","Widget","paletteTemplate","p","color","className","opts","html","i","length","current","tiny","c","toHsl","l","equals","formattedString","toString","preferredFormat","swatchStyle","toRgbString","push","cls","append","attr","noColorSelectedText","join","hideAll","pickers","hide","instanceOptions","o","callbackContext","mixin","defaultOpts","callbacks","move","bind","change","show","beforeShow","init","element","applyOptions","showPaletteOnly","showPalette","toggleButton","text","togglePaletteMoreText","togglePaletteLessText","palette","slice","paletteArray","isArray","paletteLookup","j","rgb","container","toggleClass","flat","showInput","showAlpha","allowEmpty","showButtons","togglePaletteOnly","showInitial","addClass","containerClassName","reflow","initialize","paletteElementClick","e","data","ignore","set","target","closest","hideAfterPaletteSelect","updateOriginalInput","isIE","find","shouldReplace","boundElement","after","replacer","clearButton","appendTo","parent","updateSelectionPaletteFromStorage","offsetElement","on","disabled","toggle","stopPropagation","is","preventDefault","disable","click","textInput","setFromTextInput","setTimeout","keydown","keyCode","cancelButton","cancelText","revert","clearText","isEmpty","chooseButton","chooseText","trigger","isValid","css","pickerContainer","outerWidth","draggable","alphaSlider","dragX","dragY","currentAlpha","alphaWidth","shiftKey","Math","round","dragStart","dragStop","slider","currentHue","parseFloat","slideHeight","dragger","shiftMovementDirection","oldDragX","currentSaturation","dragWidth","oldDragY","dragHeight","currentValue","furtherFromX","abs","setSaturation","setValue","initialColor","updateUI","currentPreferredFormat","format","addColorToSelectionPalette","paletteEvent","paletteContainer","initialColorContainer","localStorageKey","window","localStorage","oldPalette","split","each","selectionPalette","showSelectionPalette","inArray","maxSelectionSize","shift","getUniqueSelectionPalette","unique","reverse","drawPalette","currentColor","get","map","drawInitial","initial","colorOnShow","isDragging","draggingClass","removeClass","value","val","visible","event","create","isDefaultPrevented","doc","onkeydown","clickout","resize","button","clickoutFiresChange","off","ignoreFormatChange","newColor","newHsv","toHsv","h","s","v","a","getFormat","fromRatio","hasClass","updateHelperLocations","flatColor","toHexString","realColor","displayColor","previewElement","realHex","realRgb","toRgb","realAlpha","gradient","alphaSliderInner","toFilter","gradientType","alphaSlideHelper","slideHelper","dragHelper","max","dragHelperHeight","min","top","left","alphaX","alphaSlideHelperWidth","slideY","slideHelperHeight","fireCallback","hasChanged","isInput","width","height","slideWidth","offset","getOffset","destroy","remove","spect","id","option","optionName","optionValue","undefined","enable","setOffset","coord","theme","debounce","ownerDocument","body","markup","isInputTypeColor","inputTypeColorSupport","replaceInput","replacerClassName","picker","input","extraY","dpWidth","dpHeight","outerHeight","inputHeight","docElem","documentElement","viewWidth","clientWidth","scrollLeft","viewHeight","clientHeight","scrollTop","offsetLeft","offsetTop","bottom","right","func","obj","Array","prototype","args","call","arguments","apply","concat","onmove","onstart","onstop","prevent","returnValue","dragging","documentMode","stop","t0","originalEvent","touches","pageX","pageY","maxWidth","maxHeight","hasTouch","start","rightclick","which","duringDragEvents","document","Plugin","extra","this","dataID","method","Error","removeData","colorPicker","options","ColorPicker","noop","gradientFix","inherit","klassName","load","loadOpts","defaults","localization","palettes","fn"],"mappings":"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","file":"../ColorPicker.js","sourcesContent":["define([\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/browser\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/finder\",\r\n    \"skylark-utils/query\",\r\n    \"skylark-utils-color/colors\",\r\n    \"skylark-utils-color/Color\",\r\n    \"skylark-ui-swt/ui\",\r\n    \"skylark-ui-swt/Widget\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, colors, Color, ui, Widget) {\r\n    \"use strict\";\r\n\r\n    var noop = langx.noop;\r\n    // Spectrum Colorpicker v1.8.0\r\n    // https://github.com/bgrins/spectrum\r\n    // Author: Brian Grinstead\r\n    // License: MIT\r\n\r\n\r\n    var defaultOpts = {\r\n\r\n        // Callbacks\r\n        beforeShow: noop,\r\n        move: noop,\r\n        change: noop,\r\n        show: noop,\r\n        hide: noop,\r\n\r\n        // Options\r\n        color: false,\r\n        flat: false,\r\n        showInput: false,\r\n        allowEmpty: false,\r\n        showButtons: true,\r\n        clickoutFiresChange: true,\r\n        showInitial: false,\r\n        showPalette: false,\r\n        showPaletteOnly: false,\r\n        hideAfterPaletteSelect: false,\r\n        togglePaletteOnly: false,\r\n        showSelectionPalette: true,\r\n        localStorageKey: false,\r\n        appendTo: \"body\",\r\n        maxSelectionSize: 7,\r\n        cancelText: \"cancel\",\r\n        chooseText: \"choose\",\r\n        togglePaletteMoreText: \"more\",\r\n        togglePaletteLessText: \"less\",\r\n        clearText: \"Clear Color Selection\",\r\n        noColorSelectedText: \"No Color Selected\",\r\n        preferredFormat: false,\r\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\r\n        containerClassName: \"\",\r\n        replacerClassName: \"\",\r\n        showAlpha: false,\r\n        theme: \"sp-light\",\r\n        palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\r\n        selectionPalette: [],\r\n        disabled: false,\r\n        offset: null\r\n    },\r\n    pickers = [],\r\n    replaceInput = [\r\n        \"<div class='sp-replacer'>\",\r\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\r\n            \"<div class='sp-dd'>&#9660;</div>\",\r\n        \"</div>\"\r\n    ].join(''),\r\n    markup = (function () {\r\n\r\n        // IE7-10 does not support gradients with multiple stops, so we need to simulate\r\n        //  that for the rainbow slider with 8 divs that each have a single gradient\r\n        var gradientFix = \"\";\r\n        if (browser.isIE) {\r\n            for (var i = 1; i <= 6; i++) {\r\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\r\n            }\r\n        }\r\n\r\n        return [\r\n            \"<div class='sp-container sp-hidden'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                                gradientFix,\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\r\n\r\n    function paletteTemplate (p, color, className, opts) {\r\n        var html = [];\r\n        for (var i = 0; i < p.length; i++) {\r\n            var current = p[i];\r\n            if(current) {\r\n                var tiny = colors.Color(current);\r\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\r\n                c += (Color.equals(color, current)) ? \" sp-thumb-active\" : \"\";\r\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\r\n                var swatchStyle = \"background-color:\" + tiny.toRgbString();\r\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\r\n            } else {\r\n                var cls = 'sp-clear-display';\r\n                html.push($('<div />')\r\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\r\n                        .attr('title', opts.noColorSelectedText)\r\n                    )\r\n                    .html()\r\n                );\r\n            }\r\n        }\r\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\r\n    }\r\n\r\n    function hideAll() {\r\n        for (var i = 0; i < pickers.length; i++) {\r\n            if (pickers[i]) {\r\n                pickers[i].hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    function instanceOptions(o, callbackContext) {\r\n        var opts = langx.mixin({}, defaultOpts, o);\r\n        opts.callbacks = {\r\n            'move': bind(opts.move, callbackContext),\r\n            'change': bind(opts.change, callbackContext),\r\n            'show': bind(opts.show, callbackContext),\r\n            'hide': bind(opts.hide, callbackContext),\r\n            'beforeShow': bind(opts.beforeShow, callbackContext)\r\n        };\r\n\r\n        return opts;\r\n    }\r\n\r\n    function init(element, o) {\r\n\r\n        var opts = instanceOptions(o, element),\r\n            flat = opts.flat,\r\n            showSelectionPalette = opts.showSelectionPalette,\r\n            localStorageKey = opts.localStorageKey,\r\n            theme = opts.theme,\r\n            callbacks = opts.callbacks,\r\n            resize = langx.debounce(reflow, 10),\r\n            visible = false,\r\n            isDragging = false,\r\n            dragWidth = 0,\r\n            dragHeight = 0,\r\n            dragHelperHeight = 0,\r\n            slideHeight = 0,\r\n            slideWidth = 0,\r\n            alphaWidth = 0,\r\n            alphaSlideHelperWidth = 0,\r\n            slideHelperHeight = 0,\r\n            currentHue = 0,\r\n            currentSaturation = 0,\r\n            currentValue = 0,\r\n            currentAlpha = 1,\r\n            palette = [],\r\n            paletteArray = [],\r\n            paletteLookup = {},\r\n            selectionPalette = opts.selectionPalette.slice(0),\r\n            maxSelectionSize = opts.maxSelectionSize,\r\n            draggingClass = \"sp-dragging\",\r\n            shiftMovementDirection = null;\r\n\r\n        var doc = element.ownerDocument,\r\n            body = doc.body,\r\n            boundElement = $(element),\r\n            disabled = false,\r\n            container = $(markup, doc).addClass(theme),\r\n            pickerContainer = container.find(\".sp-picker-container\"),\r\n            dragger = container.find(\".sp-color\"),\r\n            dragHelper = container.find(\".sp-dragger\"),\r\n            slider = container.find(\".sp-hue\"),\r\n            slideHelper = container.find(\".sp-slider\"),\r\n            alphaSliderInner = container.find(\".sp-alpha-inner\"),\r\n            alphaSlider = container.find(\".sp-alpha\"),\r\n            alphaSlideHelper = container.find(\".sp-alpha-handle\"),\r\n            textInput = container.find(\".sp-input\"),\r\n            paletteContainer = container.find(\".sp-palette\"),\r\n            initialColorContainer = container.find(\".sp-initial\"),\r\n            cancelButton = container.find(\".sp-cancel\"),\r\n            clearButton = container.find(\".sp-clear\"),\r\n            chooseButton = container.find(\".sp-choose\"),\r\n            toggleButton = container.find(\".sp-palette-toggle\"),\r\n            isInput = boundElement.is(\"input\"),\r\n            isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\r\n            shouldReplace = isInput && !flat,\r\n            replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\r\n            offsetElement = (shouldReplace) ? replacer : boundElement,\r\n            previewElement = replacer.find(\".sp-preview-inner\"),\r\n            initialColor = opts.color || (isInput && boundElement.val()),\r\n            colorOnShow = false,\r\n            currentPreferredFormat = opts.preferredFormat,\r\n            clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\r\n            isEmpty = !initialColor,\r\n            allowEmpty = opts.allowEmpty && !isInputTypeColor;\r\n\r\n        function applyOptions() {\r\n\r\n            if (opts.showPaletteOnly) {\r\n                opts.showPalette = true;\r\n            }\r\n\r\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n\r\n            if (opts.palette) {\r\n                palette = opts.palette.slice(0);\r\n                paletteArray = langx.isArray(palette[0]) ? palette : [palette];\r\n                paletteLookup = {};\r\n                for (var i = 0; i < paletteArray.length; i++) {\r\n                    for (var j = 0; j < paletteArray[i].length; j++) {\r\n                        var rgb = Color(paletteArray[i][j]).toRgbString();\r\n                        paletteLookup[rgb] = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            container.toggleClass(\"sp-flat\", flat);\r\n            container.toggleClass(\"sp-input-disabled\", !opts.showInput);\r\n            container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\r\n            container.toggleClass(\"sp-clear-enabled\", allowEmpty);\r\n            container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\r\n            container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\r\n            container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\r\n            container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\r\n            container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\r\n            container.addClass(opts.className).addClass(opts.containerClassName);\r\n\r\n            reflow();\r\n        }\r\n\r\n        function initialize() {\r\n\r\n            if (browser.isIE) {\r\n                container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\r\n            }\r\n\r\n            applyOptions();\r\n\r\n            if (shouldReplace) {\r\n                boundElement.after(replacer).hide();\r\n            }\r\n\r\n            if (!allowEmpty) {\r\n                clearButton.hide();\r\n            }\r\n\r\n            if (flat) {\r\n                boundElement.after(container).hide();\r\n            }\r\n            else {\r\n\r\n                var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\r\n                if (appendTo.length !== 1) {\r\n                    appendTo = $(\"body\");\r\n                }\r\n\r\n                appendTo.append(container);\r\n            }\r\n\r\n            updateSelectionPaletteFromStorage();\r\n\r\n            offsetElement.on(\"click.ColorPicker touchstart.ColorPicker\", function (e) {\r\n                if (!disabled) {\r\n                    toggle();\r\n                }\r\n\r\n                e.stopPropagation();\r\n\r\n                if (!$(e.target).is(\"input\")) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n\r\n            if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\r\n                disable();\r\n            }\r\n\r\n            // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\r\n            container.click(stopPropagation);\r\n\r\n            // Handle user typed input\r\n            textInput.change(setFromTextInput);\r\n            textInput.on(\"paste\", function () {\r\n                setTimeout(setFromTextInput, 1);\r\n            });\r\n            textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\r\n\r\n            cancelButton.text(opts.cancelText);\r\n            cancelButton.on(\"click.ColorPicker\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                revert();\r\n                hide();\r\n            });\r\n\r\n            clearButton.attr(\"title\", opts.clearText);\r\n            clearButton.on(\"click.ColorPicker\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                isEmpty = true;\r\n                move();\r\n\r\n                if(flat) {\r\n                    //for the flat style, this is a change event\r\n                    updateOriginalInput(true);\r\n                }\r\n            });\r\n\r\n            chooseButton.text(opts.chooseText);\r\n            chooseButton.on(\"click.ColorPicker\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                if (browser.isIE && textInput.is(\":focus\")) {\r\n                    textInput.trigger('change');\r\n                }\r\n\r\n                if (isValid()) {\r\n                    updateOriginalInput(true);\r\n                    hide();\r\n                }\r\n            });\r\n\r\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n            toggleButton.on(\"click.spectrum\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                opts.showPaletteOnly = !opts.showPaletteOnly;\r\n\r\n                // To make sure the Picker area is drawn on the right, next to the\r\n                // Palette area (and not below the palette), first move the Palette\r\n                // to the left to make space for the picker, plus 5px extra.\r\n                // The 'applyOptions' function puts the whole container back into place\r\n                // and takes care of the button-text and the sp-palette-only CSS class.\r\n                if (!opts.showPaletteOnly && !flat) {\r\n                    container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\r\n                }\r\n                applyOptions();\r\n            });\r\n\r\n            draggable(alphaSlider, function (dragX, dragY, e) {\r\n                currentAlpha = (dragX / alphaWidth);\r\n                isEmpty = false;\r\n                if (e.shiftKey) {\r\n                    currentAlpha = Math.round(currentAlpha * 10) / 10;\r\n                }\r\n\r\n                move();\r\n            }, dragStart, dragStop);\r\n\r\n            draggable(slider, function (dragX, dragY) {\r\n                currentHue = parseFloat(dragY / slideHeight);\r\n                isEmpty = false;\r\n                if (!opts.showAlpha) {\r\n                    currentAlpha = 1;\r\n                }\r\n                move();\r\n            }, dragStart, dragStop);\r\n\r\n            draggable(dragger, function (dragX, dragY, e) {\r\n\r\n                // shift+drag should snap the movement to either the x or y axis.\r\n                if (!e.shiftKey) {\r\n                    shiftMovementDirection = null;\r\n                }\r\n                else if (!shiftMovementDirection) {\r\n                    var oldDragX = currentSaturation * dragWidth;\r\n                    var oldDragY = dragHeight - (currentValue * dragHeight);\r\n                    var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\r\n\r\n                    shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\r\n                }\r\n\r\n                var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\r\n                var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\r\n\r\n                if (setSaturation) {\r\n                    currentSaturation = parseFloat(dragX / dragWidth);\r\n                }\r\n                if (setValue) {\r\n                    currentValue = parseFloat((dragHeight - dragY) / dragHeight);\r\n                }\r\n\r\n                isEmpty = false;\r\n                if (!opts.showAlpha) {\r\n                    currentAlpha = 1;\r\n                }\r\n\r\n                move();\r\n\r\n            }, dragStart, dragStop);\r\n\r\n            if (!!initialColor) {\r\n                set(initialColor);\r\n\r\n                // In case color was black - update the preview UI and set the format\r\n                // since the set function will not run (default color is black).\r\n                updateUI();\r\n                currentPreferredFormat = opts.preferredFormat || Color(initialColor).format;\r\n\r\n                addColorToSelectionPalette(initialColor);\r\n            }\r\n            else {\r\n                updateUI();\r\n            }\r\n\r\n            if (flat) {\r\n                show();\r\n            }\r\n\r\n            function paletteElementClick(e) {\r\n                if (e.data && e.data.ignore) {\r\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                    move();\r\n                }\r\n                else {\r\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                    move();\r\n\r\n                    // If the picker is going to close immediately, a palette selection\r\n                    // is a change.  Otherwise, it's a move only.\r\n                    if (opts.hideAfterPaletteSelect) {\r\n                        updateOriginalInput(true);\r\n                        hide();\r\n                    } else {\r\n                        updateOriginalInput();\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            var paletteEvent = browser.isIE ? \"mousedown.ColorPicker\" : \"click.ColorPicker touchstart.ColorPicker\";\r\n            paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\r\n            initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\r\n        }\r\n\r\n        function updateSelectionPaletteFromStorage() {\r\n\r\n            if (localStorageKey && window.localStorage) {\r\n\r\n                // Migrate old palettes over to new format.  May want to remove this eventually.\r\n                try {\r\n                    var oldPalette = window.localStorage[localStorageKey].split(\",#\");\r\n                    if (oldPalette.length > 1) {\r\n                        delete window.localStorage[localStorageKey];\r\n                        langx.each(oldPalette, function(i, c) {\r\n                             addColorToSelectionPalette(c);\r\n                        });\r\n                    }\r\n                }\r\n                catch(e) { }\r\n\r\n                try {\r\n                    selectionPalette = window.localStorage[localStorageKey].split(\";\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n        }\r\n\r\n        function addColorToSelectionPalette(color) {\r\n            if (showSelectionPalette) {\r\n                var rgb = Color(color).toRgbString();\r\n                if (!paletteLookup[rgb] && langx.inArray(rgb, selectionPalette) === -1) {\r\n                    selectionPalette.push(rgb);\r\n                    while(selectionPalette.length > maxSelectionSize) {\r\n                        selectionPalette.shift();\r\n                    }\r\n                }\r\n\r\n                if (localStorageKey && window.localStorage) {\r\n                    try {\r\n                        window.localStorage[localStorageKey] = selectionPalette.join(\";\");\r\n                    }\r\n                    catch(e) { }\r\n                }\r\n            }\r\n        }\r\n\r\n        function getUniqueSelectionPalette() {\r\n            var unique = [];\r\n            if (opts.showPalette) {\r\n                for (var i = 0; i < selectionPalette.length; i++) {\r\n                    var rgb = Color(selectionPalette[i]).toRgbString();\r\n\r\n                    if (!paletteLookup[rgb]) {\r\n                        unique.push(selectionPalette[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return unique.reverse().slice(0, opts.maxSelectionSize);\r\n        }\r\n\r\n        function drawPalette() {\r\n\r\n            var currentColor = get();\r\n\r\n            var html = langx.map(paletteArray, function (palette, i) {\r\n                return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\r\n            });\r\n\r\n            updateSelectionPaletteFromStorage();\r\n\r\n            if (selectionPalette) {\r\n                html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\r\n            }\r\n\r\n            paletteContainer.html(html.join(\"\"));\r\n        }\r\n\r\n        function drawInitial() {\r\n            if (opts.showInitial) {\r\n                var initial = colorOnShow;\r\n                var current = get();\r\n                initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\r\n            }\r\n        }\r\n\r\n        function dragStart() {\r\n            if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\r\n                reflow();\r\n            }\r\n            isDragging = true;\r\n            container.addClass(draggingClass);\r\n            shiftMovementDirection = null;\r\n            boundElement.trigger('dragstart.ColorPicker', [ get() ]);\r\n        }\r\n\r\n        function dragStop() {\r\n            isDragging = false;\r\n            container.removeClass(draggingClass);\r\n            boundElement.trigger('dragstop.ColorPicker', [ get() ]);\r\n        }\r\n\r\n        function setFromTextInput() {\r\n\r\n            var value = textInput.val();\r\n\r\n            if ((value === null || value === \"\") && allowEmpty) {\r\n                set(null);\r\n                move();\r\n                updateOriginalInput();\r\n            }\r\n            else {\r\n                var tiny = Color(value);\r\n                if (tiny.isValid()) {\r\n                    set(tiny);\r\n                    move();\r\n                    updateOriginalInput();\r\n                }\r\n                else {\r\n                    textInput.addClass(\"sp-validation-error\");\r\n                }\r\n            }\r\n        }\r\n\r\n        function toggle() {\r\n            if (visible) {\r\n                hide();\r\n            }\r\n            else {\r\n                show();\r\n            }\r\n        }\r\n\r\n        function show() {\r\n            var event = eventer.create('beforeShow.ColorPicker');\r\n\r\n            if (visible) {\r\n                reflow();\r\n                return;\r\n            }\r\n\r\n            boundElement.trigger(event, [ get() ]);\r\n\r\n            if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n\r\n            hideAll();\r\n            visible = true;\r\n\r\n            $(doc).on(\"keydown.ColorPicker\", onkeydown);\r\n            $(doc).on(\"click.ColorPicker\", clickout);\r\n            $(window).on(\"resize.ColorPicker\", resize);\r\n            replacer.addClass(\"sp-active\");\r\n            container.removeClass(\"sp-hidden\");\r\n\r\n            reflow();\r\n            updateUI();\r\n\r\n            colorOnShow = get();\r\n\r\n            drawInitial();\r\n            callbacks.show(colorOnShow);\r\n            boundElement.trigger('show.ColorPicker', [ colorOnShow ]);\r\n        }\r\n\r\n        function onkeydown(e) {\r\n            // Close on ESC\r\n            if (e.keyCode === 27) {\r\n                hide();\r\n            }\r\n        }\r\n\r\n        function clickout(e) {\r\n            // Return on right click.\r\n            if (e.button == 2) { return; }\r\n\r\n            // If a drag event was happening during the mouseup, don't hide\r\n            // on click.\r\n            if (isDragging) { return; }\r\n\r\n            if (clickoutFiresChange) {\r\n                updateOriginalInput(true);\r\n            }\r\n            else {\r\n                revert();\r\n            }\r\n            hide();\r\n        }\r\n\r\n        function hide() {\r\n            // Return if hiding is unnecessary\r\n            if (!visible || flat) { return; }\r\n            visible = false;\r\n\r\n            $(doc).off(\"keydown.ColorPicker\", onkeydown);\r\n            $(doc).off(\"click.ColorPicker\", clickout);\r\n            $(window).off(\"resize.ColorPicker\", resize);\r\n\r\n            replacer.removeClass(\"sp-active\");\r\n            container.addClass(\"sp-hidden\");\r\n\r\n            callbacks.hide(get());\r\n            boundElement.trigger('hide.ColorPicker', [ get() ]);\r\n        }\r\n\r\n        function revert() {\r\n            set(colorOnShow, true);\r\n            updateOriginalInput(true);\r\n        }\r\n\r\n        function set(color, ignoreFormatChange) {\r\n            if (Color.equals(color, get())) {\r\n                // Update UI just in case a validation error needs\r\n                // to be cleared.\r\n                updateUI();\r\n                return;\r\n            }\r\n\r\n            var newColor, newHsv;\r\n            if (!color && allowEmpty) {\r\n                isEmpty = true;\r\n            } else {\r\n                isEmpty = false;\r\n                newColor = colors.Color(color);\r\n                newHsv = newColor.toHsv();\r\n\r\n                currentHue = (newHsv.h % 360) / 360;\r\n                currentSaturation = newHsv.s;\r\n                currentValue = newHsv.v;\r\n                currentAlpha = newHsv.a;\r\n            }\r\n            updateUI();\r\n\r\n            if (newColor && newColor.isValid() && !ignoreFormatChange) {\r\n                currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\r\n            }\r\n        }\r\n\r\n        function get(opts) {\r\n            opts = opts || { };\r\n\r\n            if (allowEmpty && isEmpty) {\r\n                return null;\r\n            }\r\n\r\n            return Color.fromRatio({\r\n                h: currentHue,\r\n                s: currentSaturation,\r\n                v: currentValue,\r\n                a: Math.round(currentAlpha * 1000) / 1000\r\n            }, { format: opts.format || currentPreferredFormat });\r\n        }\r\n\r\n        function isValid() {\r\n            return !textInput.hasClass(\"sp-validation-error\");\r\n        }\r\n\r\n        function move() {\r\n            updateUI();\r\n\r\n            callbacks.move(get());\r\n            boundElement.trigger('move.ColorPicker', [ get() ]);\r\n        }\r\n\r\n        function updateUI() {\r\n\r\n            textInput.removeClass(\"sp-validation-error\");\r\n\r\n            updateHelperLocations();\r\n\r\n            // Update dragger background color (gradients take care of saturation and value).\r\n            var flatColor = Color.fromRatio({ h: currentHue, s: 1, v: 1 });\r\n            dragger.css(\"background-color\", flatColor.toHexString());\r\n\r\n            // Get a format that alpha will be included in (hex and names ignore alpha)\r\n            var format = currentPreferredFormat;\r\n            if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\r\n                if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\r\n                    format = \"rgb\";\r\n                }\r\n            }\r\n\r\n            var realColor = get({ format: format }),\r\n                displayColor = '';\r\n\r\n             //reset background info for preview element\r\n            previewElement.removeClass(\"sp-clear-display\");\r\n            previewElement.css('background-color', 'transparent');\r\n\r\n            if (!realColor && allowEmpty) {\r\n                // Update the replaced elements background with icon indicating no color selection\r\n                previewElement.addClass(\"sp-clear-display\");\r\n            }\r\n            else {\r\n                var realHex = realColor.toHexString(),\r\n                    realRgb = realColor.toRgbString();\r\n\r\n                // Update the replaced elements background color (with actual selected color)\r\n                previewElement.css(\"background-color\", realRgb);\r\n\r\n                if (opts.showAlpha) {\r\n                    var rgb = realColor.toRgb();\r\n                    rgb.a = 0;\r\n                    var realAlpha = Color(rgb).toRgbString();\r\n                    var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\r\n\r\n                    if (browser.isIE) {\r\n                        alphaSliderInner.css(\"filter\", Color(realAlpha).toFilter({ gradientType: 1 }, realHex));\r\n                    }\r\n                    else {\r\n                        alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\r\n                        alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\r\n                        alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\r\n                        // Use current syntax gradient on unprefixed property.\r\n                        alphaSliderInner.css(\"background\",\r\n                            \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\r\n                    }\r\n                }\r\n\r\n                displayColor = realColor.toString(format);\r\n            }\r\n\r\n            // Update the text entry input as it changes happen\r\n            if (opts.showInput) {\r\n                textInput.val(displayColor);\r\n            }\r\n\r\n            if (opts.showPalette) {\r\n                drawPalette();\r\n            }\r\n\r\n            drawInitial();\r\n        }\r\n\r\n        function updateHelperLocations() {\r\n            var s = currentSaturation;\r\n            var v = currentValue;\r\n\r\n            if(allowEmpty && isEmpty) {\r\n                //if selected color is empty, hide the helpers\r\n                alphaSlideHelper.hide();\r\n                slideHelper.hide();\r\n                dragHelper.hide();\r\n            }\r\n            else {\r\n                //make sure helpers are visible\r\n                alphaSlideHelper.show();\r\n                slideHelper.show();\r\n                dragHelper.show();\r\n\r\n                // Where to show the little circle in that displays your current selected color\r\n                var dragX = s * dragWidth;\r\n                var dragY = dragHeight - (v * dragHeight);\r\n                dragX = Math.max(\r\n                    -dragHelperHeight,\r\n                    Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\r\n                );\r\n                dragY = Math.max(\r\n                    -dragHelperHeight,\r\n                    Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\r\n                );\r\n                dragHelper.css({\r\n                    \"top\": dragY + \"px\",\r\n                    \"left\": dragX + \"px\"\r\n                });\r\n\r\n                var alphaX = currentAlpha * alphaWidth;\r\n                alphaSlideHelper.css({\r\n                    \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\r\n                });\r\n\r\n                // Where to show the bar that displays your current selected hue\r\n                var slideY = (currentHue) * slideHeight;\r\n                slideHelper.css({\r\n                    \"top\": (slideY - slideHelperHeight) + \"px\"\r\n                });\r\n            }\r\n        }\r\n\r\n        function updateOriginalInput(fireCallback) {\r\n            var color = get(),\r\n                displayColor = '',\r\n                hasChanged = !Color.equals(color, colorOnShow);\r\n\r\n            if (color) {\r\n                displayColor = color.toString(currentPreferredFormat);\r\n                // Update the selection palette with the current color\r\n                addColorToSelectionPalette(color);\r\n            }\r\n\r\n            if (isInput) {\r\n                boundElement.val(displayColor);\r\n            }\r\n\r\n            if (fireCallback && hasChanged) {\r\n                callbacks.change(color);\r\n                boundElement.trigger('change', [ color ]);\r\n            }\r\n        }\r\n\r\n        function reflow() {\r\n            if (!visible) {\r\n                return; // Calculations would be useless and wouldn't be reliable anyways\r\n            }\r\n            dragWidth = dragger.width();\r\n            dragHeight = dragger.height();\r\n            dragHelperHeight = dragHelper.height();\r\n            slideWidth = slider.width();\r\n            slideHeight = slider.height();\r\n            slideHelperHeight = slideHelper.height();\r\n            alphaWidth = alphaSlider.width();\r\n            alphaSlideHelperWidth = alphaSlideHelper.width();\r\n\r\n            if (!flat) {\r\n                container.css(\"position\", \"absolute\");\r\n                if (opts.offset) {\r\n                    container.offset(opts.offset);\r\n                } else {\r\n                    container.offset(getOffset(container, offsetElement));\r\n                }\r\n            }\r\n\r\n            updateHelperLocations();\r\n\r\n            if (opts.showPalette) {\r\n                drawPalette();\r\n            }\r\n\r\n            boundElement.trigger('reflow.ColorPicker');\r\n        }\r\n\r\n        function destroy() {\r\n            boundElement.show();\r\n            offsetElement.off(\"click.ColorPicker touchstart.ColorPicker\");\r\n            container.remove();\r\n            replacer.remove();\r\n            pickers[spect.id] = null;\r\n        }\r\n\r\n        function option(optionName, optionValue) {\r\n            if (optionName === undefined) {\r\n                return langx.mixin({}, opts);\r\n            }\r\n            if (optionValue === undefined) {\r\n                return opts[optionName];\r\n            }\r\n\r\n            opts[optionName] = optionValue;\r\n\r\n            if (optionName === \"preferredFormat\") {\r\n                currentPreferredFormat = opts.preferredFormat;\r\n            }\r\n            applyOptions();\r\n        }\r\n\r\n        function enable() {\r\n            disabled = false;\r\n            boundElement.attr(\"disabled\", false);\r\n            offsetElement.removeClass(\"sp-disabled\");\r\n        }\r\n\r\n        function disable() {\r\n            hide();\r\n            disabled = true;\r\n            boundElement.attr(\"disabled\", true);\r\n            offsetElement.addClass(\"sp-disabled\");\r\n        }\r\n\r\n        function setOffset(coord) {\r\n            opts.offset = coord;\r\n            reflow();\r\n        }\r\n\r\n        initialize();\r\n\r\n        var spect = {\r\n            show: show,\r\n            hide: hide,\r\n            toggle: toggle,\r\n            reflow: reflow,\r\n            option: option,\r\n            enable: enable,\r\n            disable: disable,\r\n            offset: setOffset,\r\n            set: function (c) {\r\n                set(c);\r\n                updateOriginalInput();\r\n            },\r\n            get: get,\r\n            destroy: destroy,\r\n            container: container\r\n        };\r\n\r\n        spect.id = pickers.push(spect) - 1;\r\n\r\n        return spect;\r\n    }\r\n\r\n    var ColorPicker = Widget.inherit({\r\n        klassName : \"ColorPicker\",\r\n\r\n        init : init\r\n\r\n    });\r\n\r\n\r\n    /**\r\n    * checkOffset - get the offset below/above and left/right element depending on screen position\r\n    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\r\n    */\r\n    function getOffset(picker, input) {\r\n        var extraY = 0;\r\n        var dpWidth = picker.outerWidth();\r\n        var dpHeight = picker.outerHeight();\r\n        var inputHeight = input.outerHeight();\r\n        var doc = picker[0].ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\r\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\r\n        var offset = input.offset();\r\n        var offsetLeft = offset.left;\r\n        var offsetTop = offset.top;\r\n\r\n        offsetTop += inputHeight;\r\n\r\n        offsetLeft -=\r\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\r\n            Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\r\n\r\n        offsetTop -=\r\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\r\n            Math.abs(dpHeight + inputHeight - extraY) : extraY));\r\n\r\n        return {\r\n            top: offsetTop,\r\n            bottom: offset.bottom,\r\n            left: offsetLeft,\r\n            right: offset.right,\r\n            width: offset.width,\r\n            height: offset.height\r\n        };\r\n    }\r\n\r\n    /**\r\n    * stopPropagation - makes the code only doing this a little easier to read in line\r\n    */\r\n    function stopPropagation(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n    * Create a function bound to a given object\r\n    * Thanks to underscore.js\r\n    */\r\n    function bind(func, obj) {\r\n        var slice = Array.prototype.slice;\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(obj, args.concat(slice.call(arguments)));\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Lightweight drag helper.  Handles containment within the element, so that\r\n    * when dragging, the x is within [0,element.width] and y is within [0,element.height]\r\n    */\r\n    function draggable(element, onmove, onstart, onstop) {\r\n        onmove = onmove || function () { };\r\n        onstart = onstart || function () { };\r\n        onstop = onstop || function () { };\r\n        var doc = document;\r\n        var dragging = false;\r\n        var offset = {};\r\n        var maxHeight = 0;\r\n        var maxWidth = 0;\r\n        var hasTouch = ('ontouchstart' in window);\r\n\r\n        var duringDragEvents = {};\r\n        duringDragEvents[\"selectstart\"] = prevent;\r\n        duringDragEvents[\"dragstart\"] = prevent;\r\n        duringDragEvents[\"touchmove mousemove\"] = move;\r\n        duringDragEvents[\"touchend mouseup\"] = stop;\r\n\r\n        function prevent(e) {\r\n            if (e.stopPropagation) {\r\n                e.stopPropagation();\r\n            }\r\n            if (e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n            e.returnValue = false;\r\n        }\r\n\r\n        function move(e) {\r\n            if (dragging) {\r\n                // Mouseup happened outside of window\r\n                if (browser.isIE && doc.documentMode < 9 && !e.button) {\r\n                    return stop();\r\n                }\r\n\r\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\r\n                var pageX = t0 && t0.pageX || e.pageX;\r\n                var pageY = t0 && t0.pageY || e.pageY;\r\n\r\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\r\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\r\n\r\n                if (hasTouch) {\r\n                    // Stop scrolling in iOS\r\n                    prevent(e);\r\n                }\r\n\r\n                onmove.apply(element, [dragX, dragY, e]);\r\n            }\r\n        }\r\n\r\n        function start(e) {\r\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\r\n\r\n            if (!rightclick && !dragging) {\r\n                if (onstart.apply(element, arguments) !== false) {\r\n                    dragging = true;\r\n                    maxHeight = $(element).height();\r\n                    maxWidth = $(element).width();\r\n                    offset = $(element).offset();\r\n\r\n                    $(doc).on(duringDragEvents);\r\n                    $(doc.body).addClass(\"sp-dragging\");\r\n\r\n                    move(e);\r\n\r\n                    prevent(e);\r\n                }\r\n            }\r\n        }\r\n\r\n        function stop() {\r\n            if (dragging) {\r\n                $(doc).off(duringDragEvents);\r\n                $(doc.body).removeClass(\"sp-dragging\");\r\n\r\n                // Wait a tick before notifying observers to allow the click event\r\n                // to fire in Chrome.\r\n                setTimeout(function() {\r\n                    onstop.apply(element, arguments);\r\n                }, 0);\r\n            }\r\n            dragging = false;\r\n        }\r\n\r\n        $(element).on(\"touchstart mousedown\", start);\r\n    }\r\n\r\n    /**\r\n    * Define a query plugin\r\n    */\r\n    var dataID = \"ColorPicker.id\";\r\n    \r\n    function Plugin(opts, extra) {\r\n\r\n        if (typeof opts == \"string\") {\r\n\r\n            var returnValue = this;\r\n            var args = Array.prototype.slice.call( arguments, 1 );\r\n\r\n            this.each(function () {\r\n                var spect = pickers[$(this).data(dataID)];\r\n                if (spect) {\r\n                    var method = spect[opts];\r\n                    if (!method) {\r\n                        throw new Error( \"skylark-ui-colorpicker: no such method: '\" + opts + \"'\" );\r\n                    }\r\n\r\n                    if (opts == \"get\") {\r\n                        returnValue = spect.get();\r\n                    }\r\n                    else if (opts == \"container\") {\r\n                        returnValue = spect.container;\r\n                    }\r\n                    else if (opts == \"option\") {\r\n                        returnValue = spect.option.apply(spect, args);\r\n                    }\r\n                    else if (opts == \"destroy\") {\r\n                        spect.destroy();\r\n                        $(this).removeData(dataID);\r\n                    }\r\n                    else {\r\n                        method.apply(spect, args);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        // Initializing a new instance of ColorPicker\r\n        return this.colorPicker(\"destroy\").each(function () {\r\n            var options = langx.mixin({}, $(this).data(), opts);\r\n            var spect = ColorPicker(this, options);\r\n            $(this).data(dataID, spect.id);\r\n        });\r\n    }\r\n\r\n    ColorPicker.load = true;\r\n    ColorPicker.loadOpts = {};\r\n    ColorPicker.draggable = draggable;\r\n    ColorPicker.defaults = defaultOpts;\r\n\r\n    ColorPicker.localization = { };\r\n    ColorPicker.palettes = { };\r\n\r\n    $.fn.colorPicker = Plugin;\r\n\r\n    return ColorPicker;\r\n\r\n});\r\n"]}