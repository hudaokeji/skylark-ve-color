{"version":3,"sources":["ColorPicker.js"],"names":["define","skylark","langx","browser","noder","finder","$","eventer","styler","fx","plugins","popups","Color","spectrum","Indicator","noop","pickers","replaceInput","join","markup","gradientFix","isIE","i","paletteTemplate","p","color","className","opts","html","length","current","tiny","parse","c","toHsl","l","equals","formattedString","toString","preferredFormat","swatchStyle","toRgbString","push","append","attr","noColorSelectedText","ColorPicker","Plugin","inherit","klassName","pluginName","options","beforeShow","move","change","show","hide","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","appendTo","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","disabled","offset","_construct","elm","this","overrided","element","_elm","resize","debounce","reflow","visible","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","slice","draggingClass","shiftMovementDirection","callbacks","bind","doc","ownerDocument","boundElement","body","container","addClass","pickerContainer","find","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","textInput","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","is","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","val","colorOnShow","currentPreferredFormat","isEmpty","applyOptions","text","isArray","j","rgb","toggleClass","addColorToSelectionPalette","inArray","shift","drawPalette","currentColor","get","map","unique","reverse","getUniqueSelectionPalette","drawInitial","initial","dragStart","trigger","dragStop","removeClass","setFromTextInput","value","isValid","set","updateOriginalInput","onkeydown","e","keyCode","clickout","button","revert","toggle","event","create","isDefaultPrevented","hideAll","on","window","updateUI","off","ignoreFormatChange","newColor","newHsv","toHsv","h","s","v","a","getFormat","Math","round","updateHelperLocations","flatColor","css","toHexString","format","realColor","displayColor","realHex","realRgb","toRgb","realAlpha","gradient","toFilter","gradientType","dragX","dragY","max","min","top","left","alphaX","slideY","fireCallback","hasChanged","width","height","calcOffset","disable","after","parent","paletteElementClick","data","ignore","target","closest","stopPropagation","preventDefault","click","setTimeout","keydown","hasClass","outerWidth","plugin","onmove","shiftKey","onstart","onstop","parseFloat","oldDragX","oldDragY","furtherFromX","abs","setValue","paletteEvent","initialize","mixin","option","optionName","optionValue","undefined","enable","coord","destroy","remove","spect","id","func","obj","Array","prototype","args","call","arguments","apply","concat","register","localization","palettes"],"mappings":"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","file":"../ColorPicker.js","sourcesContent":["define([\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-plugins\",\r\n    \"skylark-domx-popups\",\r\n    \"skylark-graphics-color\",\r\n    \"./spectrum\",\r\n    \"./Indicator\"\r\n],function(skylark, langx, browser, noder, finder, $,eventer, styler,fx,plugins,popups,Color,spectrum,Indicator) {\r\n    \"use strict\";\r\n\r\n    var noop = langx.noop;\r\n\r\n    var pickers = [],\r\n    replaceInput = [\r\n        \"<div class='sp-replacer'>\",\r\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\r\n            \"<div class='sp-dd'>&#9660;</div>\",\r\n        \"</div>\"\r\n    ].join(''),\r\n    \r\n    markup = (function () {\r\n\r\n        // IE7-10 does not support gradients with multiple stops, so we need to simulate\r\n        //  that for the rainbow slider with 8 divs that each have a single gradient\r\n        var gradientFix = \"\";\r\n        if (browser.isIE) {\r\n            for (var i = 1; i <= 6; i++) {\r\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\r\n            }\r\n        }\r\n\r\n        return [\r\n            \"<div class='sp-container sp-hidden'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                                gradientFix,\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\r\n\r\n    function paletteTemplate (p, color, className, opts) {\r\n        var html = [];\r\n        for (var i = 0; i < p.length; i++) {\r\n            var current = p[i];\r\n            if(current) {\r\n                var tiny = Color.parse(current);\r\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\r\n                c += (Color.equals(color, current)) ? \" sp-thumb-active\" : \"\";\r\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\r\n                var swatchStyle = \"background-color:\" + tiny.toRgbString();\r\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\r\n            } else {\r\n                var cls = 'sp-clear-display';\r\n                html.push($('<div />')\r\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\r\n                        .attr('title', opts.noColorSelectedText)\r\n                    )\r\n                    .html()\r\n                );\r\n            }\r\n        }\r\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\r\n    }\r\n\r\n    function hideAll() {\r\n        for (var i = 0; i < pickers.length; i++) {\r\n            if (pickers[i]) {\r\n                pickers[i].hide();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    var ColorPicker = plugins.Plugin.inherit({\r\n        klassName : \"ColorPicker\",\r\n\r\n        pluginName : \"spectrum.colorPicker\",\r\n\r\n        options : {\r\n\r\n            // Callbacks\r\n            beforeShow: noop,\r\n            move: noop,\r\n            change: noop,\r\n            show: noop,\r\n            hide: noop,\r\n\r\n            // Options\r\n            color: false,\r\n            flat: false,\r\n            showInput: false,\r\n            allowEmpty: false,\r\n            showButtons: true,\r\n            clickoutFiresChange: true,\r\n            showInitial: false,\r\n            showPalette: false,\r\n            showPaletteOnly: false,\r\n            hideAfterPaletteSelect: false,\r\n            togglePaletteOnly: false,\r\n            showSelectionPalette: true,\r\n            localStorageKey: false,\r\n            appendTo: \"body\",\r\n            maxSelectionSize: 7,\r\n            cancelText: \"cancel\",\r\n            chooseText: \"choose\",\r\n            togglePaletteMoreText: \"more\",\r\n            togglePaletteLessText: \"less\",\r\n            clearText: \"Clear Color Selection\",\r\n            noColorSelectedText: \"No Color Selected\",\r\n            preferredFormat: false,\r\n            className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\r\n            containerClassName: \"\",\r\n            replacerClassName: \"\",\r\n            showAlpha: false,\r\n            theme: \"sp-light\",\r\n            palette: [\r\n                [\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]\r\n            ],\r\n            selectionPalette: [],\r\n            disabled: false,\r\n            offset: null\r\n\r\n        },\r\n\r\n         _construct: function(elm, options) {\r\n            this.overrided(elm,options);\r\n\r\n\r\n\r\n            var opts = this.options,\r\n                element = this._elm,\r\n                flat = opts.flat,\r\n                showSelectionPalette = opts.showSelectionPalette,\r\n                theme = opts.theme,\r\n                resize = langx.debounce(reflow, 10),\r\n                visible = false,\r\n                isDragging = false,\r\n                dragWidth = 0,\r\n                dragHeight = 0,\r\n                dragHelperHeight = 0,\r\n                slideHeight = 0,\r\n                slideWidth = 0,\r\n                alphaWidth = 0,\r\n                alphaSlideHelperWidth = 0,\r\n                slideHelperHeight = 0,\r\n                currentHue = 0,\r\n                currentSaturation = 0,\r\n                currentValue = 0,\r\n                currentAlpha = 1,\r\n                palette = [],\r\n                paletteArray = [],\r\n                paletteLookup = {},\r\n                selectionPalette = opts.selectionPalette.slice(0),\r\n                maxSelectionSize = opts.maxSelectionSize,\r\n                draggingClass = \"sp-dragging\",\r\n                shiftMovementDirection = null;\r\n\r\n\r\n            var callbacks = opts.callbacks = {\r\n                'move': bind(opts.move, elm),\r\n                'change': bind(opts.change, elm),\r\n                'show': bind(opts.show, elm),\r\n                'hide': bind(opts.hide, elm),\r\n                'beforeShow': bind(opts.beforeShow, elm)\r\n            };\r\n\r\n            var doc = element.ownerDocument,\r\n                body = doc.body,\r\n                boundElement = $(element),\r\n                disabled = false,\r\n                container = $(markup, doc).addClass(theme),\r\n                pickerContainer = container.find(\".sp-picker-container\"),\r\n                dragger = container.find(\".sp-color\"),\r\n                dragHelper = container.find(\".sp-dragger\"),\r\n                slider = container.find(\".sp-hue\"),\r\n                slideHelper = container.find(\".sp-slider\"),\r\n                alphaSliderInner = container.find(\".sp-alpha-inner\"),\r\n                alphaSlider = container.find(\".sp-alpha\"),\r\n                alphaSlideHelper = container.find(\".sp-alpha-handle\"),\r\n                textInput = container.find(\".sp-input\"),\r\n                paletteContainer = container.find(\".sp-palette\"),\r\n                initialColorContainer = container.find(\".sp-initial\"),\r\n                cancelButton = container.find(\".sp-cancel\"),\r\n                clearButton = container.find(\".sp-clear\"),\r\n                chooseButton = container.find(\".sp-choose\"),\r\n                toggleButton = container.find(\".sp-palette-toggle\"),\r\n                isInput = boundElement.is(\"input\"),\r\n                isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\r\n                shouldReplace = isInput && !flat,\r\n                replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\r\n                offsetElement = (shouldReplace) ? replacer : boundElement,\r\n                previewElement = replacer.find(\".sp-preview-inner\"),\r\n                initialColor = opts.color || (isInput && boundElement.val()),\r\n                colorOnShow = false,\r\n                currentPreferredFormat = opts.preferredFormat,\r\n                clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\r\n                isEmpty = !initialColor,\r\n                allowEmpty = opts.allowEmpty && !isInputTypeColor;\r\n\r\n            function applyOptions() {\r\n\r\n                if (opts.showPaletteOnly) {\r\n                    opts.showPalette = true;\r\n                }\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n\r\n                if (opts.palette) {\r\n                    palette = opts.palette.slice(0);\r\n                    paletteArray = langx.isArray(palette[0]) ? palette : [palette];\r\n                    paletteLookup = {};\r\n                    for (var i = 0; i < paletteArray.length; i++) {\r\n                        for (var j = 0; j < paletteArray[i].length; j++) {\r\n                            var rgb = Color.parse(paletteArray[i][j]).toRgbString();\r\n                            paletteLookup[rgb] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                container.toggleClass(\"sp-flat\", flat);\r\n                container.toggleClass(\"sp-input-disabled\", !opts.showInput);\r\n                container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\r\n                container.toggleClass(\"sp-clear-enabled\", allowEmpty);\r\n                container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\r\n                container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\r\n                container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\r\n                container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\r\n                container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\r\n                container.addClass(opts.className).addClass(opts.containerClassName);\r\n\r\n                reflow();\r\n            }\r\n\r\n            function initialize() {\r\n\r\n                if (browser.isIE) {\r\n                    container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\r\n                }\r\n\r\n                applyOptions();\r\n\r\n                if (shouldReplace) {\r\n                    boundElement.after(replacer).hide();\r\n                }\r\n\r\n                if (!allowEmpty) {\r\n                    clearButton.hide();\r\n                }\r\n\r\n                if (flat) {\r\n                    boundElement.after(container).hide();\r\n                }\r\n                else {\r\n\r\n                    var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\r\n                    if (appendTo.length !== 1) {\r\n                        appendTo = $(\"body\");\r\n                    }\r\n\r\n                    appendTo.append(container);\r\n                }\r\n\r\n                offsetElement.on(\"click.ColorPicker touchstart.ColorPicker\", function (e) {\r\n                    if (!disabled) {\r\n                        toggle();\r\n                    }\r\n\r\n                    e.stopPropagation();\r\n\r\n                    if (!$(e.target).is(\"input\")) {\r\n                        e.preventDefault();\r\n                    }\r\n                });\r\n\r\n                if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\r\n                    disable();\r\n                }\r\n\r\n                // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\r\n                container.click(stopPropagation);\r\n\r\n                // Handle user typed input\r\n                textInput.change(setFromTextInput);\r\n                textInput.on(\"paste\", function () {\r\n                    setTimeout(setFromTextInput, 1);\r\n                });\r\n                textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\r\n\r\n                cancelButton.text(opts.cancelText);\r\n                cancelButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    revert();\r\n                    hide();\r\n                });\r\n\r\n                clearButton.attr(\"title\", opts.clearText);\r\n                clearButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    isEmpty = true;\r\n                    move();\r\n\r\n                    if(flat) {\r\n                        //for the flat style, this is a change event\r\n                        updateOriginalInput(true);\r\n                    }\r\n                });\r\n\r\n                chooseButton.text(opts.chooseText);\r\n                chooseButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    if (browser.isIE && textInput.is(\":focus\")) {\r\n                        textInput.trigger('change');\r\n                    }\r\n\r\n                    if (isValid()) {\r\n                        updateOriginalInput(true);\r\n                        hide();\r\n                    }\r\n                });\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n                toggleButton.on(\"click.spectrum\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    opts.showPaletteOnly = !opts.showPaletteOnly;\r\n\r\n                    // To make sure the Picker area is drawn on the right, next to the\r\n                    // Palette area (and not below the palette), first move the Palette\r\n                    // to the left to make space for the picker, plus 5px extra.\r\n                    // The 'applyOptions' function puts the whole container back into place\r\n                    // and takes care of the button-text and the sp-palette-only CSS class.\r\n                    if (!opts.showPaletteOnly && !flat) {\r\n                        container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\r\n                    }\r\n                    applyOptions();\r\n                });\r\n\r\n                alphaSlider.plugin(\"domx.indicator\", {\r\n                    \"onmove\" :   function (dragX, dragY, e) {\r\n                        currentAlpha = (dragX / alphaWidth);\r\n                        isEmpty = false;\r\n                        if (e.shiftKey) {\r\n                            currentAlpha = Math.round(currentAlpha * 10) / 10;\r\n                        }\r\n\r\n                        move();\r\n                    }, \r\n                    \"onstart\" : dragStart, \r\n                    \"onstop\" :dragStop\r\n                });\r\n\r\n                slider.plugin(\"domx.indicator\", {\r\n                    \"onmove\" :   function (dragX, dragY, e) {\r\n                        currentHue = parseFloat(dragY / slideHeight);\r\n                        isEmpty = false;\r\n                        if (!opts.showAlpha) {\r\n                            currentAlpha = 1;\r\n                        }\r\n                        move();\r\n                    }, \r\n                    \"onstart\" : dragStart, \r\n                    \"onstop\" :dragStop\r\n                });\r\n\r\n                dragger.plugin(\"domx.indicator\", {\r\n                    \"onmove\" :   function (dragX, dragY, e) {\r\n\r\n                        // shift+drag should snap the movement to either the x or y axis.\r\n                        if (!e.shiftKey) {\r\n                            shiftMovementDirection = null;\r\n                        }\r\n                        else if (!shiftMovementDirection) {\r\n                            var oldDragX = currentSaturation * dragWidth;\r\n                            var oldDragY = dragHeight - (currentValue * dragHeight);\r\n                            var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\r\n\r\n                            shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\r\n                        }\r\n\r\n                        var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\r\n                        var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\r\n\r\n                        if (setSaturation) {\r\n                            currentSaturation = parseFloat(dragX / dragWidth);\r\n                        }\r\n                        if (setValue) {\r\n                            currentValue = parseFloat((dragHeight - dragY) / dragHeight);\r\n                        }\r\n\r\n                        isEmpty = false;\r\n                        if (!opts.showAlpha) {\r\n                            currentAlpha = 1;\r\n                        }\r\n\r\n                        move();\r\n                    }, \r\n                    \"onstart\" : dragStart, \r\n                    \"onstop\" :dragStop\r\n                });\r\n\r\n                if (!!initialColor) {\r\n                    set(initialColor);\r\n\r\n                    // In case color was black - update the preview UI and set the format\r\n                    // since the set function will not run (default color is black).\r\n                    updateUI();\r\n                    currentPreferredFormat = opts.preferredFormat || Color.parse(initialColor).format;\r\n\r\n                    addColorToSelectionPalette(initialColor);\r\n                }\r\n                else {\r\n                    updateUI();\r\n                }\r\n\r\n                if (flat) {\r\n                    show();\r\n                }\r\n\r\n                function paletteElementClick(e) {\r\n                    if (e.data && e.data.ignore) {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n                    }\r\n                    else {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n\r\n                        // If the picker is going to close immediately, a palette selection\r\n                        // is a change.  Otherwise, it's a move only.\r\n                        if (opts.hideAfterPaletteSelect) {\r\n                            updateOriginalInput(true);\r\n                            hide();\r\n                        } else {\r\n                            updateOriginalInput();\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                var paletteEvent = browser.isIE ? \"mousedown.ColorPicker\" : \"click.ColorPicker touchstart.ColorPicker\";\r\n                paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\r\n                initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\r\n            }\r\n\r\n\r\n            function addColorToSelectionPalette(color) {\r\n                if (showSelectionPalette) {\r\n                    var rgb = Color.parse(color).toRgbString();\r\n                    if (!paletteLookup[rgb] && langx.inArray(rgb, selectionPalette) === -1) {\r\n                        selectionPalette.push(rgb);\r\n                        while(selectionPalette.length > maxSelectionSize) {\r\n                            selectionPalette.shift();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function getUniqueSelectionPalette() {\r\n                var unique = [];\r\n                if (opts.showPalette) {\r\n                    for (var i = 0; i < selectionPalette.length; i++) {\r\n                        var rgb = Color.parse(selectionPalette[i]).toRgbString();\r\n\r\n                        if (!paletteLookup[rgb]) {\r\n                            unique.push(selectionPalette[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return unique.reverse().slice(0, opts.maxSelectionSize);\r\n            }\r\n\r\n            function drawPalette() {\r\n\r\n                var currentColor = get();\r\n\r\n                var html = langx.map(paletteArray, function (palette, i) {\r\n                    return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\r\n                });\r\n\r\n                if (selectionPalette) {\r\n                    html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\r\n                }\r\n\r\n                paletteContainer.html(html.join(\"\"));\r\n            }\r\n\r\n            function drawInitial() {\r\n                if (opts.showInitial) {\r\n                    var initial = colorOnShow;\r\n                    var current = get();\r\n                    initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\r\n                }\r\n            }\r\n\r\n            function dragStart() {\r\n                if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\r\n                    reflow();\r\n                }\r\n                isDragging = true;\r\n                container.addClass(draggingClass);\r\n                shiftMovementDirection = null;\r\n                boundElement.trigger('dragstart.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function dragStop() {\r\n                isDragging = false;\r\n                container.removeClass(draggingClass);\r\n                boundElement.trigger('dragstop.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function setFromTextInput() {\r\n\r\n                var value = textInput.val();\r\n\r\n                if ((value === null || value === \"\") && allowEmpty) {\r\n                    set(null);\r\n                    move();\r\n                    updateOriginalInput();\r\n                }\r\n                else {\r\n                    var tiny = Color.parse(value);\r\n                    if (tiny.isValid()) {\r\n                        set(tiny);\r\n                        move();\r\n                        updateOriginalInput();\r\n                    }\r\n                    else {\r\n                        textInput.addClass(\"sp-validation-error\");\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            function onkeydown(e) {\r\n                // Close on ESC\r\n                if (e.keyCode === 27) {\r\n                    hide();\r\n                }\r\n            }\r\n\r\n            function clickout(e) {\r\n                // Return on right click.\r\n                if (e.button == 2) { return; }\r\n\r\n                // If a drag event was happening during the mouseup, don't hide\r\n                // on click.\r\n                if (isDragging) { return; }\r\n\r\n                if (clickoutFiresChange) {\r\n                    updateOriginalInput(true);\r\n                }\r\n                else {\r\n                    revert();\r\n                }\r\n                hide();\r\n            }\r\n\r\n            function toggle() {\r\n                if (visible) {\r\n                    hide();\r\n                }\r\n                else {\r\n                    show();\r\n                }\r\n            }\r\n\r\n            function show() {\r\n                var event = eventer.create('beforeShow.ColorPicker');\r\n\r\n                if (visible) {\r\n                    reflow();\r\n                    return;\r\n                }\r\n\r\n                boundElement.trigger(event, [ get() ]);\r\n\r\n                if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\r\n                    return;\r\n                }\r\n\r\n                hideAll();\r\n                visible = true;\r\n\r\n                $(doc).on(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).on(\"click.ColorPicker\", clickout);\r\n                $(window).on(\"resize.ColorPicker\", resize);\r\n                replacer.addClass(\"sp-active\");\r\n                container.removeClass(\"sp-hidden\");\r\n\r\n                reflow();\r\n                updateUI();\r\n\r\n                colorOnShow = get();\r\n\r\n                drawInitial();\r\n                callbacks.show(colorOnShow);\r\n                boundElement.trigger('show.ColorPicker', [ colorOnShow ]);\r\n            }\r\n            function hide() {\r\n                // Return if hiding is unnecessary\r\n                if (!visible || flat) { return; }\r\n                visible = false;\r\n\r\n                $(doc).off(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).off(\"click.ColorPicker\", clickout);\r\n                $(window).off(\"resize.ColorPicker\", resize);\r\n\r\n                replacer.removeClass(\"sp-active\");\r\n                container.addClass(\"sp-hidden\");\r\n\r\n                callbacks.hide(get());\r\n                boundElement.trigger('hide.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function revert() {\r\n                set(colorOnShow, true);\r\n                updateOriginalInput(true);\r\n            }\r\n\r\n            function set(color, ignoreFormatChange) {\r\n                if (Color.equals(color, get())) {\r\n                    // Update UI just in case a validation error needs\r\n                    // to be cleared.\r\n                    updateUI();\r\n                    return;\r\n                }\r\n\r\n                var newColor, newHsv;\r\n                if (!color && allowEmpty) {\r\n                    isEmpty = true;\r\n                } else {\r\n                    isEmpty = false;\r\n                    newColor = Color.parse(color);\r\n                    newHsv = newColor.toHsv();\r\n\r\n                    currentHue = (newHsv.h % 360) / 360;\r\n                    currentSaturation = newHsv.s;\r\n                    currentValue = newHsv.v;\r\n                    currentAlpha = newHsv.a;\r\n                }\r\n                updateUI();\r\n\r\n                if (newColor && newColor.isValid() && !ignoreFormatChange) {\r\n                    currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\r\n                }\r\n            }\r\n\r\n            function get(opts) {\r\n                opts = opts || { };\r\n\r\n                if (allowEmpty && isEmpty) {\r\n                    return null;\r\n                }\r\n\r\n\r\n                /*\r\n                return fromRatio({\r\n                    h: currentHue,\r\n                    s: currentSaturation,\r\n                    v: currentValue,\r\n                    a: Math.round(currentAlpha * 1000) / 1000\r\n                }, { format: opts.format || currentPreferredFormat });\r\n                */\r\n                return Color.parse({\r\n                    h: currentHue * 360,\r\n                    s: currentSaturation,\r\n                    v: currentValue,\r\n                    a: Math.round(currentAlpha * 1000) / 1000\r\n                });\r\n            }\r\n\r\n            function isValid() {\r\n                return !textInput.hasClass(\"sp-validation-error\");\r\n            }\r\n\r\n            function move() {\r\n                updateUI();\r\n\r\n                callbacks.move(get());\r\n                boundElement.trigger('move.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function updateUI() {\r\n\r\n                textInput.removeClass(\"sp-validation-error\");\r\n\r\n                updateHelperLocations();\r\n\r\n                // Update dragger background color (gradients take care of saturation and value).\r\n                //var flatColor = Color.fromRatio({ h: currentHue, s: 1, v: 1 });\r\n                var flatColor = Color.parse({ \r\n                    h: currentHue * 360, \r\n                    s: 1, \r\n                    v: 1 \r\n                });\r\n                dragger.css(\"background-color\", flatColor.toHexString());\r\n\r\n                // Get a format that alpha will be included in (hex and names ignore alpha)\r\n                var format = currentPreferredFormat;\r\n                if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\r\n                    if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\r\n                        format = \"rgb\";\r\n                    }\r\n                }\r\n\r\n                var realColor = get({ format: format }),\r\n                    displayColor = '';\r\n\r\n                 //reset background info for preview element\r\n                previewElement.removeClass(\"sp-clear-display\");\r\n                previewElement.css('background-color', 'transparent');\r\n\r\n                if (!realColor && allowEmpty) {\r\n                    // Update the replaced elements background with icon indicating no color selection\r\n                    previewElement.addClass(\"sp-clear-display\");\r\n                }\r\n                else {\r\n                    var realHex = realColor.toHexString(),\r\n                        realRgb = realColor.toRgbString();\r\n\r\n                    // Update the replaced elements background color (with actual selected color)\r\n                    previewElement.css(\"background-color\", realRgb);\r\n\r\n                    if (opts.showAlpha) {\r\n                        var rgb = realColor.toRgb();\r\n                        rgb.a = 0;\r\n                        var realAlpha = Color.parse(rgb).toRgbString();\r\n                        var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\r\n\r\n                        if (browser.isIE) {\r\n                            alphaSliderInner.css(\"filter\", Color.parse(realAlpha).toFilter({ gradientType: 1 }, realHex));\r\n                        }\r\n                        else {\r\n                            alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\r\n                            // Use current syntax gradient on unprefixed property.\r\n                            alphaSliderInner.css(\"background\",\r\n                                \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\r\n                        }\r\n                    }\r\n\r\n                    displayColor = realColor.toString(format);\r\n                }\r\n\r\n                // Update the text entry input as it changes happen\r\n                if (opts.showInput) {\r\n                    textInput.val(displayColor);\r\n                }\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                drawInitial();\r\n            }\r\n\r\n            function updateHelperLocations() {\r\n                var s = currentSaturation;\r\n                var v = currentValue;\r\n\r\n                if(allowEmpty && isEmpty) {\r\n                    //if selected color is empty, hide the helpers\r\n                    alphaSlideHelper.hide();\r\n                    slideHelper.hide();\r\n                    dragHelper.hide();\r\n                }\r\n                else {\r\n                    //make sure helpers are visible\r\n                    alphaSlideHelper.show();\r\n                    slideHelper.show();\r\n                    dragHelper.show();\r\n\r\n                    // Where to show the little circle in that displays your current selected color\r\n                    var dragX = s * dragWidth;\r\n                    var dragY = dragHeight - (v * dragHeight);\r\n                    dragX = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\r\n                    );\r\n                    dragY = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\r\n                    );\r\n                    dragHelper.css({\r\n                        \"top\": dragY + \"px\",\r\n                        \"left\": dragX + \"px\"\r\n                    });\r\n\r\n                    var alphaX = currentAlpha * alphaWidth;\r\n                    alphaSlideHelper.css({\r\n                        \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\r\n                    });\r\n\r\n                    // Where to show the bar that displays your current selected hue\r\n                    var slideY = (currentHue) * slideHeight;\r\n                    slideHelper.css({\r\n                        \"top\": (slideY - slideHelperHeight) + \"px\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            function updateOriginalInput(fireCallback) {\r\n                var color = get(),\r\n                    displayColor = '',\r\n                    hasChanged = !Color.equals(color, colorOnShow);\r\n\r\n                if (color) {\r\n                    displayColor = color.toString(currentPreferredFormat);\r\n                    // Update the selection palette with the current color\r\n                    addColorToSelectionPalette(color);\r\n                }\r\n\r\n                if (isInput) {\r\n                    boundElement.val(displayColor);\r\n                }\r\n\r\n                if (fireCallback && hasChanged) {\r\n                    callbacks.change(color);\r\n                    boundElement.trigger('change', [ color ]);\r\n                }\r\n            }\r\n\r\n            function reflow() {\r\n                if (!visible) {\r\n                    return; // Calculations would be useless and wouldn't be reliable anyways\r\n                }\r\n                dragWidth = dragger.width();\r\n                dragHeight = dragger.height();\r\n                dragHelperHeight = dragHelper.height();\r\n                slideWidth = slider.width();\r\n                slideHeight = slider.height();\r\n                slideHelperHeight = slideHelper.height();\r\n                alphaWidth = alphaSlider.width();\r\n                alphaSlideHelperWidth = alphaSlideHelper.width();\r\n\r\n                if (!flat) {\r\n                    container.css(\"position\", \"absolute\");\r\n                    if (opts.offset) {\r\n                        container.offset(opts.offset);\r\n                    } else {\r\n                        container.offset(popups.calcOffset(container[0], offsetElement[0]));\r\n                    }\r\n                }\r\n\r\n                updateHelperLocations();\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                boundElement.trigger('reflow.ColorPicker');\r\n            }\r\n\r\n            function destroy() {\r\n                boundElement.show();\r\n                offsetElement.off(\"click.ColorPicker touchstart.ColorPicker\");\r\n                container.remove();\r\n                replacer.remove();\r\n                pickers[spect.id] = null;\r\n            }\r\n\r\n            function option(optionName, optionValue) {\r\n                if (optionName === undefined) {\r\n                    return langx.mixin({}, opts);\r\n                }\r\n                if (optionValue === undefined) {\r\n                    return opts[optionName];\r\n                }\r\n\r\n                opts[optionName] = optionValue;\r\n\r\n                if (optionName === \"preferredFormat\") {\r\n                    currentPreferredFormat = opts.preferredFormat;\r\n                }\r\n                applyOptions();\r\n            }\r\n\r\n            function enable() {\r\n                disabled = false;\r\n                boundElement.attr(\"disabled\", false);\r\n                offsetElement.removeClass(\"sp-disabled\");\r\n            }\r\n\r\n            function disable() {\r\n                hide();\r\n                disabled = true;\r\n                boundElement.attr(\"disabled\", true);\r\n                offsetElement.addClass(\"sp-disabled\");\r\n            }\r\n\r\n            function setOffset(coord) {\r\n                opts.offset = coord;\r\n                reflow();\r\n            }\r\n\r\n            initialize();\r\n\r\n            langx.mixin(this, {\r\n                show: show,\r\n                hide: hide,\r\n                toggle: toggle,\r\n                reflow: reflow,\r\n                option: option,\r\n                enable: enable,\r\n                disable: disable,\r\n                offset: setOffset,\r\n                set: function (c) {\r\n                    set(c);\r\n                    updateOriginalInput();\r\n                },\r\n                get: get,\r\n                destroy: destroy,\r\n                container: container\r\n            });\r\n        }\r\n    });\r\n\r\n\r\n    plugins.register(ColorPicker,\"colorPicker\");\r\n\r\n    /**\r\n    * stopPropagation - makes the code only doing this a little easier to read in line\r\n    */\r\n    function stopPropagation(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n    * Create a function bound to a given object\r\n    * Thanks to underscore.js\r\n    */\r\n    function bind(func, obj) {\r\n        var slice = Array.prototype.slice;\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(obj, args.concat(slice.call(arguments)));\r\n        };\r\n    }\r\n\r\n    ColorPicker.localization = { };\r\n    ColorPicker.palettes = { };\r\n\r\n\r\n    return spectrum.ColorPicker = ColorPicker;\r\n\r\n});\r\n"]}